original file
-----------------------------------
^^export function ^^fn(s: ^^string): ^^new() => ^^View
^^export function ^^fn(s: string)
^^export function ^^fn(n: number)
^^export function ^^fn(s: any) {
    ^^return "";
}

^^export function ^^fn(s: string): ^^new () => ^^View;
^^export function ^^fn(s: string);
^^export function ^^fn(n: number);
^^export function ^^fn(s: any) {
    ^^return "";
}
-----------------------------------

>export function fn(s: string): new() => View
 ^^^^^^
 source.ts meta.function.ts keyword.control.export.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^
                 source.ts meta.function.ts entity.name.function.ts
                   ^
                   source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
                    ^
                    source.ts meta.function.ts meta.function.type.parameter.ts variable.parameter.ts
                     ^
                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                      ^
                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                       ^^^^^^
                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts support.type.primitive.ts
                             ^
                             source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
                              ^
                              source.ts meta.function.ts meta.return.type.ts
                               ^
                               source.ts meta.function.ts meta.return.type.ts
                                ^^^
                                source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts keyword.control.new.ts
                                   ^
                                   source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                                    ^
                                    source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                                     ^
                                     source.ts meta.function.ts meta.return.type.ts
                                      ^^
                                      source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts storage.type.function.arrow.ts
                                        ^
                                        source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                                         ^^^^
                                         source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts entity.name.type.ts
>export function fn(s: string)
 ^^^^^^
 source.ts meta.function.ts meta.function.overload.ts keyword.control.export.ts
       ^
       source.ts meta.function.ts meta.function.overload.ts
        ^^^^^^^^
        source.ts meta.function.ts meta.function.overload.ts storage.type.function.ts
                ^
                source.ts meta.function.ts meta.function.overload.ts
                 ^^
                 source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts
                   ^
                   source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
                    ^
                    source.ts meta.function.ts meta.function.type.parameter.ts variable.parameter.ts
                     ^
                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                      ^
                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                       ^^^^^^
                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts support.type.primitive.ts
                             ^
                             source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
>export function fn(n: number)
 ^^^^^^
 source.ts meta.function.ts meta.function.overload.ts keyword.control.export.ts
       ^
       source.ts meta.function.ts meta.function.overload.ts
        ^^^^^^^^
        source.ts meta.function.ts meta.function.overload.ts storage.type.function.ts
                ^
                source.ts meta.function.ts meta.function.overload.ts
                 ^^
                 source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts
                   ^
                   source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
                    ^
                    source.ts meta.function.ts meta.function.type.parameter.ts variable.parameter.ts
                     ^
                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                      ^
                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                       ^^^^^^
                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts support.type.primitive.ts
                             ^
                             source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
>export function fn(s: any) {
 ^^^^^^
 source.ts meta.function.ts meta.function.overload.ts keyword.control.export.ts
       ^
       source.ts meta.function.ts meta.function.overload.ts
        ^^^^^^^^
        source.ts meta.function.ts meta.function.overload.ts storage.type.function.ts
                ^
                source.ts meta.function.ts meta.function.overload.ts
                 ^^
                 source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts
                   ^
                   source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
                    ^
                    source.ts meta.function.ts meta.function.type.parameter.ts variable.parameter.ts
                     ^
                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                      ^
                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                       ^^^
                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts support.type.primitive.ts
                          ^
                          source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
                           ^
                           source.ts meta.function.ts
                            ^
                            source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
>    return "";
 ^^^^
 source.ts meta.function.ts meta.decl.block.ts
     ^^^^^^
     source.ts meta.function.ts meta.decl.block.ts keyword.control.flow.ts
           ^
           source.ts meta.function.ts meta.decl.block.ts
            ^
            source.ts meta.function.ts meta.decl.block.ts string.quoted.double.ts punctuation.definition.string.begin.ts
             ^
             source.ts meta.function.ts meta.decl.block.ts string.quoted.double.ts punctuation.definition.string.end.ts
              ^^
              source.ts meta.function.ts meta.decl.block.ts
>}
 ^
 source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
>
 ^
 source.ts
>export function fn(s: string): new () => View;
 ^^^^^^
 source.ts meta.function.ts keyword.control.export.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^
                 source.ts meta.function.ts entity.name.function.ts
                   ^
                   source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
                    ^
                    source.ts meta.function.ts meta.function.type.parameter.ts variable.parameter.ts
                     ^
                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                      ^
                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                       ^^^^^^
                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts support.type.primitive.ts
                             ^
                             source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
                              ^
                              source.ts meta.function.ts meta.return.type.ts
                               ^
                               source.ts meta.function.ts meta.return.type.ts
                                ^^^
                                source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts keyword.control.new.ts
                                   ^
                                   source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                                    ^
                                    source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                                     ^
                                     source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.function.ts meta.return.type.ts
                                       ^^
                                       source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts storage.type.function.arrow.ts
                                         ^
                                         source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                                          ^^^^
                                          source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts entity.name.type.ts
                                              ^^
                                              source.ts
>export function fn(s: string);
 ^^^^^^
 source.ts meta.function.ts keyword.control.export.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^
                 source.ts meta.function.ts entity.name.function.ts
                   ^
                   source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
                    ^
                    source.ts meta.function.ts meta.function.type.parameter.ts variable.parameter.ts
                     ^
                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                      ^
                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                       ^^^^^^
                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts support.type.primitive.ts
                             ^
                             source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
                              ^^
                              source.ts
>export function fn(n: number);
 ^^^^^^
 source.ts meta.function.ts keyword.control.export.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^
                 source.ts meta.function.ts entity.name.function.ts
                   ^
                   source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
                    ^
                    source.ts meta.function.ts meta.function.type.parameter.ts variable.parameter.ts
                     ^
                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                      ^
                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                       ^^^^^^
                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts support.type.primitive.ts
                             ^
                             source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
                              ^^
                              source.ts
>export function fn(s: any) {
 ^^^^^^
 source.ts meta.function.ts keyword.control.export.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^
                 source.ts meta.function.ts entity.name.function.ts
                   ^
                   source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
                    ^
                    source.ts meta.function.ts meta.function.type.parameter.ts variable.parameter.ts
                     ^
                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                      ^
                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                       ^^^
                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts support.type.primitive.ts
                          ^
                          source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
                           ^
                           source.ts meta.function.ts
                            ^
                            source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
>    return "";
 ^^^^
 source.ts meta.function.ts meta.decl.block.ts
     ^^^^^^
     source.ts meta.function.ts meta.decl.block.ts keyword.control.flow.ts
           ^
           source.ts meta.function.ts meta.decl.block.ts
            ^
            source.ts meta.function.ts meta.decl.block.ts string.quoted.double.ts punctuation.definition.string.begin.ts
             ^
             source.ts meta.function.ts meta.decl.block.ts string.quoted.double.ts punctuation.definition.string.end.ts
              ^^
              source.ts meta.function.ts meta.decl.block.ts
>}
 ^
 source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts