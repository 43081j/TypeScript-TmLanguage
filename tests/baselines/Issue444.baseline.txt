original file
-----------------------------------
var test = "123 456";

if ((test.match(/\d+/g)[0]) / (test.match(/\d+/g)[1]) < 1) {
    return;
}

if ((test.match(/\d+/g)[0])/(test.match(/\d+/g)[1]) < 1) {
    return;
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>var test = "123 456";
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
         ^
         source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
          ^
          source.ts meta.var.expr.ts keyword.operator.assignment.ts
           ^
           source.ts meta.var.expr.ts
            ^
            source.ts meta.var.expr.ts string.quoted.double.ts punctuation.definition.string.begin.ts
             ^^^^^^^
             source.ts meta.var.expr.ts string.quoted.double.ts
                    ^
                    source.ts meta.var.expr.ts string.quoted.double.ts punctuation.definition.string.end.ts
                     ^
                     source.ts punctuation.terminator.statement.ts
                      ^^
                      source.ts
>
 ^^
 source.ts
>if ((test.match(/\d+/g)[0]) / (test.match(/\d+/g)[1]) < 1) {
 ^^
 source.ts keyword.control.conditional.ts
   ^
   source.ts
    ^
    source.ts meta.brace.round.ts
     ^
     source.ts meta.brace.round.ts
      ^^^^
      source.ts variable.other.object.ts
          ^
          source.ts punctuation.accessor.ts
           ^^^^^
           source.ts support.function.ts
                ^
                source.ts meta.brace.round.ts
                 ^
                 source.ts string.regexp.ts punctuation.definition.string.begin.ts
                  ^^
                  source.ts string.regexp.ts constant.other.character-class.regexp
                    ^
                    source.ts string.regexp.ts keyword.operator.quantifier.regexp
                     ^
                     source.ts string.regexp.ts punctuation.definition.string.end.ts
                      ^
                      source.ts string.regexp.ts keyword.other.ts
                       ^
                       source.ts meta.brace.round.ts
                        ^
                        source.ts meta.array.literal.ts meta.brace.square.ts
                         ^
                         source.ts meta.array.literal.ts constant.numeric.decimal.ts
                          ^
                          source.ts meta.array.literal.ts meta.brace.square.ts
                           ^
                           source.ts meta.brace.round.ts
                            ^
                            source.ts
                             ^
                             source.ts keyword.operator.arithmetic.ts
                              ^
                              source.ts
                               ^
                               source.ts meta.brace.round.ts
                                ^^^^
                                source.ts variable.other.object.ts
                                    ^
                                    source.ts punctuation.accessor.ts
                                     ^^^^^
                                     source.ts support.function.ts
                                          ^
                                          source.ts meta.brace.round.ts
                                           ^
                                           source.ts string.regexp.ts punctuation.definition.string.begin.ts
                                            ^^
                                            source.ts string.regexp.ts constant.other.character-class.regexp
                                              ^
                                              source.ts string.regexp.ts keyword.operator.quantifier.regexp
                                               ^
                                               source.ts string.regexp.ts punctuation.definition.string.end.ts
                                                ^
                                                source.ts string.regexp.ts keyword.other.ts
                                                 ^
                                                 source.ts meta.brace.round.ts
                                                  ^
                                                  source.ts meta.array.literal.ts meta.brace.square.ts
                                                   ^
                                                   source.ts meta.array.literal.ts constant.numeric.decimal.ts
                                                    ^
                                                    source.ts meta.array.literal.ts meta.brace.square.ts
                                                     ^
                                                     source.ts meta.brace.round.ts
                                                      ^
                                                      source.ts
                                                       ^
                                                       source.ts keyword.operator.relational.ts
                                                        ^
                                                        source.ts
                                                         ^
                                                         source.ts constant.numeric.decimal.ts
                                                          ^
                                                          source.ts meta.brace.round.ts
                                                           ^
                                                           source.ts
                                                            ^
                                                            source.ts meta.block.ts punctuation.definition.block.ts
                                                             ^^
                                                             source.ts meta.block.ts
>    return;
 ^^^^
 source.ts meta.block.ts
     ^^^^^^
     source.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.block.ts punctuation.terminator.statement.ts
            ^^
            source.ts meta.block.ts
>}
 ^
 source.ts meta.block.ts punctuation.definition.block.ts
  ^^
  source.ts
>
 ^^
 source.ts
>if ((test.match(/\d+/g)[0])/(test.match(/\d+/g)[1]) < 1) {
 ^^
 source.ts keyword.control.conditional.ts
   ^
   source.ts
    ^
    source.ts meta.brace.round.ts
     ^
     source.ts meta.brace.round.ts
      ^^^^
      source.ts variable.other.object.ts
          ^
          source.ts punctuation.accessor.ts
           ^^^^^
           source.ts support.function.ts
                ^
                source.ts meta.brace.round.ts
                 ^
                 source.ts string.regexp.ts punctuation.definition.string.begin.ts
                  ^^
                  source.ts string.regexp.ts constant.other.character-class.regexp
                    ^
                    source.ts string.regexp.ts keyword.operator.quantifier.regexp
                     ^
                     source.ts string.regexp.ts punctuation.definition.string.end.ts
                      ^
                      source.ts string.regexp.ts keyword.other.ts
                       ^
                       source.ts meta.brace.round.ts
                        ^
                        source.ts meta.array.literal.ts meta.brace.square.ts
                         ^
                         source.ts meta.array.literal.ts constant.numeric.decimal.ts
                          ^
                          source.ts meta.array.literal.ts meta.brace.square.ts
                           ^
                           source.ts meta.brace.round.ts
                            ^
                            source.ts keyword.operator.arithmetic.ts
                             ^
                             source.ts meta.brace.round.ts
                              ^^^^
                              source.ts variable.other.object.ts
                                  ^
                                  source.ts punctuation.accessor.ts
                                   ^^^^^
                                   source.ts support.function.ts
                                        ^
                                        source.ts meta.brace.round.ts
                                         ^
                                         source.ts string.regexp.ts punctuation.definition.string.begin.ts
                                          ^^
                                          source.ts string.regexp.ts constant.other.character-class.regexp
                                            ^
                                            source.ts string.regexp.ts keyword.operator.quantifier.regexp
                                             ^
                                             source.ts string.regexp.ts punctuation.definition.string.end.ts
                                              ^
                                              source.ts string.regexp.ts keyword.other.ts
                                               ^
                                               source.ts meta.brace.round.ts
                                                ^
                                                source.ts meta.array.literal.ts meta.brace.square.ts
                                                 ^
                                                 source.ts meta.array.literal.ts constant.numeric.decimal.ts
                                                  ^
                                                  source.ts meta.array.literal.ts meta.brace.square.ts
                                                   ^
                                                   source.ts meta.brace.round.ts
                                                    ^
                                                    source.ts
                                                     ^
                                                     source.ts keyword.operator.relational.ts
                                                      ^
                                                      source.ts
                                                       ^
                                                       source.ts constant.numeric.decimal.ts
                                                        ^
                                                        source.ts meta.brace.round.ts
                                                         ^
                                                         source.ts
                                                          ^
                                                          source.ts meta.block.ts punctuation.definition.block.ts
                                                           ^^
                                                           source.ts meta.block.ts
>    return;
 ^^^^
 source.ts meta.block.ts
     ^^^^^^
     source.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.block.ts punctuation.terminator.statement.ts
            ^^
            source.ts meta.block.ts
>}
 ^
 source.ts meta.block.ts punctuation.definition.block.ts