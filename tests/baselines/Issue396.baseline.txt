original file
-----------------------------------
/* jshint esnext:true */
let it = require('./it');
it.execute(function* builder(options) {
   let metaData = yield it.read(option.metaFile);
   it.meta = yield it.parse(metaData, {
      ICON: yield it.read(options.icon),
      ICON64: (yield it.read(options.icon64)).base64()
   });
});
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>/* jshint esnext:true */
 ^^
 source.ts comment.block.ts punctuation.definition.comment.ts
   ^^^^^^^^^^^^^^^^^^^^
   source.ts comment.block.ts
                       ^^
                       source.ts comment.block.ts punctuation.definition.comment.ts
                         ^^
                         source.ts
>let it = require('./it');
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
       ^
       source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
        ^
        source.ts meta.var.expr.ts keyword.operator.assignment.ts
         ^
         source.ts meta.var.expr.ts
          ^^^^^^^
          source.ts meta.var.expr.ts meta.function-call.ts support.function.ts
                 ^
                 source.ts meta.var.expr.ts meta.brace.round.ts
                  ^
                  source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                   ^^^^
                   source.ts meta.var.expr.ts string.quoted.single.ts
                       ^
                       source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                        ^
                        source.ts meta.var.expr.ts meta.brace.round.ts
                         ^
                         source.ts punctuation.terminator.statement.ts
                          ^^
                          source.ts
>it.execute(function* builder(options) {
 ^^
 source.ts meta.function-call.ts variable.other.object.ts
   ^
   source.ts meta.function-call.ts punctuation.accessor.ts
    ^^^^^^^
    source.ts meta.function-call.ts entity.name.function.ts
           ^
           source.ts meta.brace.round.ts
            ^^^^^^^^
            source.ts meta.function.expression.ts storage.type.function.ts
                    ^
                    source.ts meta.function.expression.ts keyword.generator.asterisk.ts
                     ^
                     source.ts meta.function.expression.ts
                      ^^^^^^^
                      source.ts meta.function.expression.ts meta.definition.function.ts entity.name.function.ts
                             ^
                             source.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                              ^^^^^^^
                              source.ts meta.function.expression.ts meta.parameters.ts variable.parameter.ts
                                     ^
                                     source.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                      ^
                                      source.ts meta.function.expression.ts
                                       ^
                                       source.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
                                        ^^
                                        source.ts meta.function.expression.ts meta.block.ts
>   let metaData = yield it.read(option.metaFile);
 ^^^
 source.ts meta.function.expression.ts meta.block.ts
    ^^^
    source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts storage.type.ts
       ^
       source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts
        ^^^^^^^^
        source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
                ^
                source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                 ^
                 source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts keyword.operator.assignment.ts
                  ^
                  source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts
                   ^^^^^
                   source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts keyword.control.flow.ts
                        ^
                        source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts
                         ^^
                         source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts meta.function-call.ts variable.other.object.ts
                           ^
                           source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts meta.function-call.ts punctuation.accessor.ts
                            ^^^^
                            source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts meta.function-call.ts entity.name.function.ts
                                ^
                                source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts meta.brace.round.ts
                                 ^^^^^^
                                 source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts variable.other.object.ts
                                       ^
                                       source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts punctuation.accessor.ts
                                        ^^^^^^^^
                                        source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts variable.other.property.ts
                                                ^
                                                source.ts meta.function.expression.ts meta.block.ts meta.var.expr.ts meta.brace.round.ts
                                                 ^
                                                 source.ts meta.function.expression.ts meta.block.ts punctuation.terminator.statement.ts
                                                  ^^
                                                  source.ts meta.function.expression.ts meta.block.ts
>   it.meta = yield it.parse(metaData, {
 ^^^
 source.ts meta.function.expression.ts meta.block.ts
    ^^
    source.ts meta.function.expression.ts meta.block.ts variable.other.object.ts
      ^
      source.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
       ^^^^
       source.ts meta.function.expression.ts meta.block.ts variable.other.property.ts
           ^
           source.ts meta.function.expression.ts meta.block.ts
            ^
            source.ts meta.function.expression.ts meta.block.ts keyword.operator.assignment.ts
             ^
             source.ts meta.function.expression.ts meta.block.ts
              ^^^^^
              source.ts meta.function.expression.ts meta.block.ts keyword.control.flow.ts
                   ^
                   source.ts meta.function.expression.ts meta.block.ts
                    ^^
                    source.ts meta.function.expression.ts meta.block.ts meta.function-call.ts variable.other.object.ts
                      ^
                      source.ts meta.function.expression.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
                       ^^^^^
                       source.ts meta.function.expression.ts meta.block.ts meta.function-call.ts support.function.ts
                            ^
                            source.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                             ^^^^^^^^
                             source.ts meta.function.expression.ts meta.block.ts variable.other.readwrite.ts
                                     ^
                                     source.ts meta.function.expression.ts meta.block.ts punctuation.separator.comma.ts
                                      ^
                                      source.ts meta.function.expression.ts meta.block.ts
                                       ^
                                       source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts punctuation.definition.block.ts
                                        ^^
                                        source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts
>      ICON: yield it.read(options.icon),
 ^^^^^^
 source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts
       ^^^^
       source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.object-literal.key.ts
           ^
           source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.object-literal.key.ts punctuation.separator.key-value.ts
            ^
            source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts
             ^^^^^
             source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts keyword.control.flow.ts
                  ^
                  source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts
                   ^^
                   source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.function-call.ts variable.other.object.ts
                     ^
                     source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.function-call.ts punctuation.accessor.ts
                      ^^^^
                      source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.function-call.ts entity.name.function.ts
                          ^
                          source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.brace.round.ts
                           ^^^^^^^
                           source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts variable.other.object.ts
                                  ^
                                  source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts punctuation.accessor.ts
                                   ^^^^
                                   source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts variable.other.property.ts
                                       ^
                                       source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.brace.round.ts
                                        ^
                                        source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts punctuation.separator.comma.ts
                                         ^^
                                         source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts
>      ICON64: (yield it.read(options.icon64)).base64()
 ^^^^^^
 source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts
       ^^^^^^
       source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.object-literal.key.ts
             ^
             source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.object-literal.key.ts punctuation.separator.key-value.ts
              ^
              source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts
               ^
               source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.brace.round.ts
                ^^^^^
                source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts keyword.control.flow.ts
                     ^
                     source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts
                      ^^
                      source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.function-call.ts variable.other.object.ts
                        ^
                        source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.function-call.ts punctuation.accessor.ts
                         ^^^^
                         source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.function-call.ts entity.name.function.ts
                             ^
                             source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.brace.round.ts
                              ^^^^^^^
                              source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts variable.other.object.ts
                                     ^
                                     source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts punctuation.accessor.ts
                                      ^^^^^^
                                      source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts variable.other.property.ts
                                            ^
                                            source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.brace.round.ts
                                             ^
                                             source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.brace.round.ts
                                              ^
                                              source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.function-call.ts punctuation.accessor.ts
                                               ^^^^^^
                                               source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.function-call.ts entity.name.function.ts
                                                     ^
                                                     source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.brace.round.ts
                                                      ^
                                                      source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts meta.brace.round.ts
                                                       ^^
                                                       source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts
>   });
 ^^^
 source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts meta.object.member.ts
    ^
    source.ts meta.function.expression.ts meta.block.ts meta.objectliteral.ts punctuation.definition.block.ts
     ^
     source.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
      ^
      source.ts meta.function.expression.ts meta.block.ts punctuation.terminator.statement.ts
       ^^
       source.ts meta.function.expression.ts meta.block.ts
>});
 ^
 source.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
  ^
  source.ts meta.brace.round.ts
   ^
   source.ts punctuation.terminator.statement.ts