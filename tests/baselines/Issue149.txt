original file
-----------------------------------
^^export function ^^fn(s: ^^string): ^^new() => ^^View
^^export function ^^fn(s: string)
^^export function ^^fn(n: number)
^^export function ^^fn(s: any) {
    ^^return "";
}

^^export function ^^fn(s: string): ^^new () => ^^View;
^^export function ^^fn(s: string);
^^export function ^^fn(n: number);
^^export function ^^fn(s: any) {
    ^^return "";
}
-----------------------------------

>export function fn(s: string): new() => View
 ^^^^^^
 [1, 1]: source.ts meta.function.ts keyword.control.export.ts 
                 ^^
                 [1, 17]: source.ts meta.function.ts entity.name.function.ts 
                       ^^^^^^
                       [1, 23]: source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.primitive.ts 
                                ^^^
                                [1, 32]: source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts keyword.control.new.ts 
                                         ^^^^
                                         [1, 41]: source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.type.name.ts 
>export function fn(s: string)
 ^^^^^^
 [2, 1]: source.ts meta.function.ts meta.function.overload.ts keyword.control.export.ts 
                 ^^
                 [2, 17]: source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts 
>export function fn(n: number)
 ^^^^^^
 [3, 1]: source.ts meta.function.ts meta.function.overload.ts keyword.control.export.ts 
                 ^^
                 [3, 17]: source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts 
>export function fn(s: any) {
 ^^^^^^
 [4, 1]: source.ts meta.function.ts meta.function.overload.ts keyword.control.export.ts 
                 ^^
                 [4, 17]: source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts 
>    return "";
     ^^^^^^
     [5, 5]: source.ts meta.function.ts meta.decl.block.ts keyword.control.flow.ts 
>}
>
>export function fn(s: string): new () => View;
 ^^^^^^
 [8, 1]: source.ts meta.function.ts keyword.control.export.ts 
                 ^^
                 [8, 17]: source.ts meta.function.ts entity.name.function.ts 
                                ^^^
                                [8, 32]: source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts keyword.control.new.ts 
                                          ^^^^
                                          [8, 42]: source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.type.name.ts 
>export function fn(s: string);
 ^^^^^^
 [9, 1]: source.ts meta.function.ts keyword.control.export.ts 
                 ^^
                 [9, 17]: source.ts meta.function.ts entity.name.function.ts 
>export function fn(n: number);
 ^^^^^^
 [10, 1]: source.ts meta.function.ts keyword.control.export.ts 
                 ^^
                 [10, 17]: source.ts meta.function.ts entity.name.function.ts 
>export function fn(s: any) {
 ^^^^^^
 [11, 1]: source.ts meta.function.ts keyword.control.export.ts 
                 ^^
                 [11, 17]: source.ts meta.function.ts entity.name.function.ts 
>    return "";
     ^^^^^^
     [12, 5]: source.ts meta.function.ts meta.decl.block.ts keyword.control.flow.ts 
>}