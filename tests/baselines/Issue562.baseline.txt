original file
-----------------------------------
// @onlyOwnGrammar - As this has cast
yield <ClassD>10;
(yield <ClassD>10);
function foo() {
  return <ClassD>10;
}
topYields.sort ((share1,share2) => {
    if (share1.yield < share2.yield) { return 1; }
    if (share1.yield > share2.yield) { return -1; }
    return 0;
  });

-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>// @onlyOwnGrammar - As this has cast
 ^^
 source.ts comment.line.double-slash.ts punctuation.definition.comment.ts
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   source.ts comment.line.double-slash.ts
>yield <ClassD>10;
 ^^^^^
 source.ts keyword.control.flow.ts
      ^
      source.ts cast.expr.ts
       ^
       source.ts cast.expr.ts meta.brace.angle.ts
        ^^^^^^
        source.ts cast.expr.ts entity.name.type.ts
              ^
              source.ts cast.expr.ts meta.brace.angle.ts
               ^^
               source.ts constant.numeric.decimal.ts
                 ^
                 source.ts punctuation.terminator.statement.ts
>(yield <ClassD>10);
 ^
 source.ts meta.brace.round.ts
  ^^^^^
  source.ts keyword.control.flow.ts
       ^
       source.ts cast.expr.ts
        ^
        source.ts cast.expr.ts meta.brace.angle.ts
         ^^^^^^
         source.ts cast.expr.ts entity.name.type.ts
               ^
               source.ts cast.expr.ts meta.brace.angle.ts
                ^^
                source.ts constant.numeric.decimal.ts
                  ^
                  source.ts meta.brace.round.ts
                   ^
                   source.ts punctuation.terminator.statement.ts
>function foo() {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^^^
          source.ts meta.function.ts meta.definition.function.ts entity.name.function.ts
             ^
             source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
              ^
              source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.end.ts
               ^
               source.ts meta.function.ts
                ^
                source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
>  return <ClassD>10;
 ^^
 source.ts meta.function.ts meta.block.ts
   ^^^^^^
   source.ts meta.function.ts meta.block.ts keyword.control.flow.ts
         ^
         source.ts meta.function.ts meta.block.ts cast.expr.ts
          ^
          source.ts meta.function.ts meta.block.ts cast.expr.ts meta.brace.angle.ts
           ^^^^^^
           source.ts meta.function.ts meta.block.ts cast.expr.ts entity.name.type.ts
                 ^
                 source.ts meta.function.ts meta.block.ts cast.expr.ts meta.brace.angle.ts
                  ^^
                  source.ts meta.function.ts meta.block.ts constant.numeric.decimal.ts
                    ^
                    source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
>}
 ^
 source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
>topYields.sort ((share1,share2) => {
 ^^^^^^^^^
 source.ts meta.function-call.ts variable.other.object.ts
          ^
          source.ts meta.function-call.ts punctuation.accessor.ts
           ^^^^
           source.ts meta.function-call.ts support.function.ts
               ^
               source.ts
                ^
                source.ts meta.brace.round.ts
                 ^
                 source.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                  ^^^^^^
                  source.ts meta.arrow.ts meta.parameters.ts variable.parameter.ts
                        ^
                        source.ts meta.arrow.ts meta.parameters.ts punctuation.separator.parameter.ts
                         ^^^^^^
                         source.ts meta.arrow.ts meta.parameters.ts variable.parameter.ts
                               ^
                               source.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                ^
                                source.ts meta.arrow.ts
                                 ^^
                                 source.ts meta.arrow.ts storage.type.function.arrow.ts
                                   ^
                                   source.ts meta.arrow.ts
                                    ^
                                    source.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>    if (share1.yield < share2.yield) { return 1; }
 ^^^^
 source.ts meta.arrow.ts meta.block.ts
     ^^
     source.ts meta.arrow.ts meta.block.ts keyword.control.conditional.ts
       ^
       source.ts meta.arrow.ts meta.block.ts
        ^
        source.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
         ^^^^^^
         source.ts meta.arrow.ts meta.block.ts variable.other.object.ts
               ^
               source.ts meta.arrow.ts meta.block.ts punctuation.accessor.ts
                ^^^^^
                source.ts meta.arrow.ts meta.block.ts variable.other.property.ts
                     ^
                     source.ts meta.arrow.ts meta.block.ts
                      ^
                      source.ts meta.arrow.ts meta.block.ts keyword.operator.relational.ts
                       ^
                       source.ts meta.arrow.ts meta.block.ts
                        ^^^^^^
                        source.ts meta.arrow.ts meta.block.ts variable.other.object.ts
                              ^
                              source.ts meta.arrow.ts meta.block.ts punctuation.accessor.ts
                               ^^^^^
                               source.ts meta.arrow.ts meta.block.ts variable.other.property.ts
                                    ^
                                    source.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
                                     ^
                                     source.ts meta.arrow.ts meta.block.ts
                                      ^
                                      source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
                                       ^
                                       source.ts meta.arrow.ts meta.block.ts meta.block.ts
                                        ^^^^^^
                                        source.ts meta.arrow.ts meta.block.ts meta.block.ts keyword.control.flow.ts
                                              ^
                                              source.ts meta.arrow.ts meta.block.ts meta.block.ts
                                               ^
                                               source.ts meta.arrow.ts meta.block.ts meta.block.ts constant.numeric.decimal.ts
                                                ^
                                                source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.terminator.statement.ts
                                                 ^
                                                 source.ts meta.arrow.ts meta.block.ts meta.block.ts
                                                  ^
                                                  source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>    if (share1.yield > share2.yield) { return -1; }
 ^^^^
 source.ts meta.arrow.ts meta.block.ts
     ^^
     source.ts meta.arrow.ts meta.block.ts keyword.control.conditional.ts
       ^
       source.ts meta.arrow.ts meta.block.ts
        ^
        source.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
         ^^^^^^
         source.ts meta.arrow.ts meta.block.ts variable.other.object.ts
               ^
               source.ts meta.arrow.ts meta.block.ts punctuation.accessor.ts
                ^^^^^
                source.ts meta.arrow.ts meta.block.ts variable.other.property.ts
                     ^
                     source.ts meta.arrow.ts meta.block.ts
                      ^
                      source.ts meta.arrow.ts meta.block.ts keyword.operator.relational.ts
                       ^
                       source.ts meta.arrow.ts meta.block.ts
                        ^^^^^^
                        source.ts meta.arrow.ts meta.block.ts variable.other.object.ts
                              ^
                              source.ts meta.arrow.ts meta.block.ts punctuation.accessor.ts
                               ^^^^^
                               source.ts meta.arrow.ts meta.block.ts variable.other.property.ts
                                    ^
                                    source.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
                                     ^
                                     source.ts meta.arrow.ts meta.block.ts
                                      ^
                                      source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
                                       ^
                                       source.ts meta.arrow.ts meta.block.ts meta.block.ts
                                        ^^^^^^
                                        source.ts meta.arrow.ts meta.block.ts meta.block.ts keyword.control.flow.ts
                                              ^
                                              source.ts meta.arrow.ts meta.block.ts meta.block.ts
                                               ^
                                               source.ts meta.arrow.ts meta.block.ts meta.block.ts keyword.operator.arithmetic.ts
                                                ^
                                                source.ts meta.arrow.ts meta.block.ts meta.block.ts constant.numeric.decimal.ts
                                                 ^
                                                 source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.terminator.statement.ts
                                                  ^
                                                  source.ts meta.arrow.ts meta.block.ts meta.block.ts
                                                   ^
                                                   source.ts meta.arrow.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
>    return 0;
 ^^^^
 source.ts meta.arrow.ts meta.block.ts
     ^^^^^^
     source.ts meta.arrow.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.arrow.ts meta.block.ts
            ^
            source.ts meta.arrow.ts meta.block.ts constant.numeric.decimal.ts
             ^
             source.ts meta.arrow.ts meta.block.ts punctuation.terminator.statement.ts
>  });
 ^^
 source.ts meta.arrow.ts meta.block.ts
   ^
   source.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
    ^
    source.ts meta.brace.round.ts
     ^
     source.ts punctuation.terminator.statement.ts
>
 ^
 source.ts