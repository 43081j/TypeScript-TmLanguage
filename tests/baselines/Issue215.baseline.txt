original file
-----------------------------------
function test() {
    for (var i=0 ; i<l ; ++i) {

    }
}

for (var i=0 ; i<l ; ++i) {

}
-----------------------------------

>function test() {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^^^^
          source.ts meta.function.ts entity.name.function.ts
              ^
              source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
               ^
               source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                ^
                source.ts meta.function.ts
                 ^
                 source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
                  ^^
                  source.ts meta.function.ts meta.block.ts
>    for (var i=0 ; i<l ; ++i) {
 ^^^^
 source.ts meta.function.ts meta.block.ts
     ^^^
     source.ts meta.function.ts meta.block.ts keyword.control.loop.ts
        ^
        source.ts meta.function.ts meta.block.ts
         ^
         source.ts meta.function.ts meta.block.ts meta.brace.round.ts
          ^^^
          source.ts meta.function.ts meta.block.ts meta.var.expr.ts storage.type.ts
             ^
             source.ts meta.function.ts meta.block.ts meta.var.expr.ts
              ^
              source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.other.readwrite.ts
               ^
               source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.assignment.ts
                ^
                source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts constant.numeric.decimal.ts
                 ^
                 source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                  ^
                  source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
                   ^^
                   source.ts meta.function.ts meta.block.ts
                     ^
                     source.ts meta.function.ts meta.block.ts keyword.operator.relational.ts
                      ^^
                      source.ts meta.function.ts meta.block.ts
                        ^
                        source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
                         ^
                         source.ts meta.function.ts meta.block.ts
                          ^^
                          source.ts meta.function.ts meta.block.ts keyword.operator.increment.ts
                            ^
                            source.ts meta.function.ts meta.block.ts
                             ^
                             source.ts meta.function.ts meta.block.ts meta.brace.round.ts
                              ^
                              source.ts meta.function.ts meta.block.ts
                               ^
                               source.ts meta.function.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
                                ^^
                                source.ts meta.function.ts meta.block.ts meta.block.ts
>
 ^^
 source.ts meta.function.ts meta.block.ts meta.block.ts
>    }
 ^^^^
 source.ts meta.function.ts meta.block.ts meta.block.ts
     ^
     source.ts meta.function.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
      ^^
      source.ts meta.function.ts meta.block.ts
>}
 ^
 source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
  ^^
  source.ts
>
 ^^
 source.ts
>for (var i=0 ; i<l ; ++i) {
 ^^^
 source.ts keyword.control.loop.ts
    ^
    source.ts
     ^
     source.ts meta.brace.round.ts
      ^^^
      source.ts meta.var.expr.ts storage.type.ts
         ^
         source.ts meta.var.expr.ts
          ^
          source.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.other.readwrite.ts
           ^
           source.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.assignment.ts
            ^
            source.ts meta.var.expr.ts meta.var-single-variable.expr.ts constant.numeric.decimal.ts
             ^
             source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
              ^
              source.ts punctuation.terminator.statement.ts
               ^^
               source.ts
                 ^
                 source.ts keyword.operator.relational.ts
                  ^^
                  source.ts
                    ^
                    source.ts punctuation.terminator.statement.ts
                     ^
                     source.ts
                      ^^
                      source.ts keyword.operator.increment.ts
                        ^
                        source.ts
                         ^
                         source.ts meta.brace.round.ts
                          ^
                          source.ts
                           ^
                           source.ts meta.block.ts punctuation.definition.block.ts
                            ^^
                            source.ts meta.block.ts
>
 ^^
 source.ts meta.block.ts
>}
 ^
 source.ts meta.block.ts punctuation.definition.block.ts