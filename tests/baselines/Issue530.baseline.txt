original file
-----------------------------------
function getStats() {
    const query = query<[number], number>(`
        SELECT *
        FROM statistics
        WHERE unit_id = $1`)

    return database.execute(query, [id])
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>function getStats() {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^^^^^^^^
          source.ts meta.function.ts meta.definition.function.ts entity.name.function.ts
                  ^
                  source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                   ^
                   source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                    ^
                    source.ts meta.function.ts
                     ^
                     source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
                      ^^
                      source.ts meta.function.ts meta.block.ts
>    const query = query<[number], number>(`
 ^^^^
 source.ts meta.function.ts meta.block.ts
     ^^^^^
     source.ts meta.function.ts meta.block.ts meta.var.expr.ts storage.type.ts
          ^
          source.ts meta.function.ts meta.block.ts meta.var.expr.ts
           ^^^^^
           source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
                ^
                source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                 ^
                 source.ts meta.function.ts meta.block.ts meta.var.expr.ts keyword.operator.assignment.ts
                  ^
                  source.ts meta.function.ts meta.block.ts meta.var.expr.ts
                   ^^^^^
                   source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.function-call.ts entity.name.function.ts
                        ^
                        source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                         ^
                         source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.type.parameters.ts meta.type.tuple.ts meta.brace.square.ts
                          ^^^^^^
                          source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.type.parameters.ts meta.type.tuple.ts support.type.primitive.ts
                                ^
                                source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.type.parameters.ts meta.type.tuple.ts meta.brace.square.ts
                                 ^
                                 source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.type.parameters.ts punctuation.separator.comma.ts
                                  ^
                                  source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.type.parameters.ts
                                   ^^^^^^
                                   source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.type.parameters.ts support.type.primitive.ts
                                         ^
                                         source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                          ^
                                          source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.brace.round.ts
                                           ^
                                           source.ts meta.function.ts meta.block.ts meta.var.expr.ts string.template.ts punctuation.definition.string.template.begin.ts
                                            ^^
                                            source.ts meta.function.ts meta.block.ts meta.var.expr.ts string.template.ts
>        SELECT *
 ^^^^^^^^^^^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.var.expr.ts string.template.ts
>        FROM statistics
 ^^^^^^^^^^^^^^^^^^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.var.expr.ts string.template.ts
>        WHERE unit_id = $1`)
 ^^^^^^^^^^^^^^^^^^^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.var.expr.ts string.template.ts
                           ^
                           source.ts meta.function.ts meta.block.ts meta.var.expr.ts string.template.ts punctuation.definition.string.template.end.ts
                            ^
                            source.ts meta.function.ts meta.block.ts meta.var.expr.ts meta.brace.round.ts
                             ^
                             source.ts meta.function.ts meta.block.ts meta.var.expr.ts
>
 ^^
 source.ts meta.function.ts meta.block.ts
>    return database.execute(query, [id])
 ^^^^
 source.ts meta.function.ts meta.block.ts
     ^^^^^^
     source.ts meta.function.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.function.ts meta.block.ts
            ^^^^^^^^
            source.ts meta.function.ts meta.block.ts meta.function-call.ts variable.other.object.ts
                    ^
                    source.ts meta.function.ts meta.block.ts meta.function-call.ts punctuation.accessor.ts
                     ^^^^^^^
                     source.ts meta.function.ts meta.block.ts meta.function-call.ts entity.name.function.ts
                            ^
                            source.ts meta.function.ts meta.block.ts meta.brace.round.ts
                             ^^^^^
                             source.ts meta.function.ts meta.block.ts variable.other.readwrite.ts
                                  ^
                                  source.ts meta.function.ts meta.block.ts punctuation.separator.comma.ts
                                   ^
                                   source.ts meta.function.ts meta.block.ts
                                    ^
                                    source.ts meta.function.ts meta.block.ts meta.array.literal.ts meta.brace.square.ts
                                     ^^
                                     source.ts meta.function.ts meta.block.ts meta.array.literal.ts variable.other.readwrite.ts
                                       ^
                                       source.ts meta.function.ts meta.block.ts meta.array.literal.ts meta.brace.square.ts
                                        ^
                                        source.ts meta.function.ts meta.block.ts meta.brace.round.ts
                                         ^^
                                         source.ts meta.function.ts meta.block.ts
>}
 ^
 source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts