original file
-----------------------------------
func(function () // }
{
    if (false)
        return 1
    else
        return 2
});
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>func(function () // }
 ^^^^
 source.ts meta.function-call.ts entity.name.function.ts
     ^
     source.ts meta.brace.round.ts
      ^^^^^^^^
      source.ts meta.function.expression.ts storage.type.function.ts
              ^
              source.ts meta.function.expression.ts
               ^
               source.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                ^
                source.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                 ^
                 source.ts meta.function.expression.ts
                  ^^
                  source.ts meta.function.expression.ts comment.line.double-slash.ts punctuation.definition.comment.ts
                    ^^^
                    source.ts meta.function.expression.ts comment.line.double-slash.ts
>{
 ^
 source.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
>    if (false)
 ^^^^
 source.ts meta.function.expression.ts meta.block.ts
     ^^
     source.ts meta.function.expression.ts meta.block.ts keyword.control.conditional.ts
       ^
       source.ts meta.function.expression.ts meta.block.ts
        ^
        source.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
         ^^^^^
         source.ts meta.function.expression.ts meta.block.ts constant.language.boolean.false.ts
              ^
              source.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
>        return 1
 ^^^^^^^^
 source.ts meta.function.expression.ts meta.block.ts
         ^^^^^^
         source.ts meta.function.expression.ts meta.block.ts keyword.control.flow.ts
               ^
               source.ts meta.function.expression.ts meta.block.ts
                ^
                source.ts meta.function.expression.ts meta.block.ts constant.numeric.decimal.ts
>    else
 ^^^^
 source.ts meta.function.expression.ts meta.block.ts
     ^^^^
     source.ts meta.function.expression.ts meta.block.ts keyword.control.conditional.ts
>        return 2
 ^^^^^^^^
 source.ts meta.function.expression.ts meta.block.ts
         ^^^^^^
         source.ts meta.function.expression.ts meta.block.ts keyword.control.flow.ts
               ^
               source.ts meta.function.expression.ts meta.block.ts
                ^
                source.ts meta.function.expression.ts meta.block.ts constant.numeric.decimal.ts
>});
 ^
 source.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
  ^
  source.ts meta.brace.round.ts
   ^
   source.ts punctuation.terminator.statement.ts