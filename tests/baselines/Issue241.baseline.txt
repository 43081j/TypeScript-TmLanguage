original file
-----------------------------------
function f(): () => number {
    const x = 0;
}
function foo(): [number, () => number] {
    const x = 0;
}
function f(): () => number {
    const x = 0;
}
function f2(): () => {x: number }{
    const x = 0;
}
function foo2(): [number, () => { x: number }] {
    const x = 0;
}
-----------------------------------

>function f(): () => number {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^
          source.ts meta.function.ts entity.name.function.ts
           ^
           source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
            ^
            source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
             ^
             source.ts meta.function.ts meta.return.type.ts
              ^
              source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
               ^
               source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                ^
                source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                 ^
                 source.ts meta.function.ts meta.return.type.ts
                  ^^
                  source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts storage.type.function.arrow.ts
                    ^
                    source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                     ^^^^^^
                     source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts support.type.primitive.ts
                           ^
                           source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                            ^
                            source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
                             ^^
                             source.ts meta.function.ts meta.decl.block.ts
>    const x = 0;
 ^^^^
 source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts
     ^^^^^
     source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts storage.type.ts
          ^
          source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts
           ^
           source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.other.readwrite.ts
            ^
            source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
             ^
             source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.assignment.ts
              ^
              source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
               ^
               source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts constant.numeric.decimal.ts
                ^^^
                source.ts meta.function.ts meta.decl.block.ts
>}
 ^
 source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
  ^^
  source.ts
>function foo(): [number, () => number] {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^^^
          source.ts meta.function.ts entity.name.function.ts
             ^
             source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
              ^
              source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
               ^
               source.ts meta.function.ts meta.return.type.ts
                ^
                source.ts meta.function.ts meta.return.type.ts
                 ^
                 source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.brace.square.ts
                  ^^^^^^
                  source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts support.type.primitive.ts
                        ^
                        source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts
                         ^
                         source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.paren.cover.ts
                          ^
                          source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.paren.cover.ts meta.brace.round.ts
                           ^
                           source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.paren.cover.ts meta.brace.round.ts
                            ^
                            source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts
                             ^^
                             source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts storage.type.function.arrow.ts
                               ^
                               source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts
                                ^^^^^^
                                source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts support.type.primitive.ts
                                      ^
                                      source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.brace.square.ts
                                       ^
                                       source.ts meta.function.ts meta.return.type.ts
                                        ^
                                        source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
                                         ^^
                                         source.ts meta.function.ts meta.decl.block.ts
>    const x = 0;
 ^^^^
 source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts
     ^^^^^
     source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts storage.type.ts
          ^
          source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts
           ^
           source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.other.readwrite.ts
            ^
            source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
             ^
             source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.assignment.ts
              ^
              source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
               ^
               source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts constant.numeric.decimal.ts
                ^^^
                source.ts meta.function.ts meta.decl.block.ts
>}
 ^
 source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
  ^^
  source.ts
>function f(): () => number {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^
          source.ts meta.function.ts entity.name.function.ts
           ^
           source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
            ^
            source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
             ^
             source.ts meta.function.ts meta.return.type.ts
              ^
              source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
               ^
               source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                ^
                source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                 ^
                 source.ts meta.function.ts meta.return.type.ts
                  ^^
                  source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts storage.type.function.arrow.ts
                    ^
                    source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                     ^^^^^^
                     source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts support.type.primitive.ts
                           ^
                           source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                            ^
                            source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
                             ^^
                             source.ts meta.function.ts meta.decl.block.ts
>    const x = 0;
 ^^^^
 source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts
     ^^^^^
     source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts storage.type.ts
          ^
          source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts
           ^
           source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.other.readwrite.ts
            ^
            source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
             ^
             source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.assignment.ts
              ^
              source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
               ^
               source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts constant.numeric.decimal.ts
                ^^^
                source.ts meta.function.ts meta.decl.block.ts
>}
 ^
 source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
  ^^
  source.ts
>function f2(): () => {x: number }{
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^^
          source.ts meta.function.ts entity.name.function.ts
            ^
            source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
             ^
             source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
              ^
              source.ts meta.function.ts meta.return.type.ts
               ^
               source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                ^
                source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                 ^
                 source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts meta.brace.round.ts
                  ^
                  source.ts meta.function.ts meta.return.type.ts
                   ^^
                   source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts storage.type.function.arrow.ts
                     ^
                     source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.object.type.ts
                      ^
                      source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.object.type.ts punctuation.definition.block.ts
                       ^
                       source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts variable.object.property.ts
                        ^
                        source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts
                         ^
                         source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts
                          ^^^^^^
                          source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts
                                ^
                                source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts
                                 ^
                                 source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.object.type.ts punctuation.definition.block.ts
                                  ^
                                  source.ts meta.decl.block.ts punctuation.definition.block.ts
                                   ^^
                                   source.ts meta.decl.block.ts
>    const x = 0;
 ^^^^
 source.ts meta.decl.block.ts meta.var.expr.ts
     ^^^^^
     source.ts meta.decl.block.ts meta.var.expr.ts storage.type.ts
          ^
          source.ts meta.decl.block.ts meta.var.expr.ts
           ^
           source.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.other.readwrite.ts
            ^
            source.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
             ^
             source.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.assignment.ts
              ^
              source.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
               ^
               source.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts constant.numeric.decimal.ts
                ^^^
                source.ts meta.decl.block.ts
>}
 ^
 source.ts meta.decl.block.ts punctuation.definition.block.ts
  ^^
  source.ts
>function foo2(): [number, () => { x: number }] {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^^^^
          source.ts meta.function.ts entity.name.function.ts
              ^
              source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.begin.ts
               ^
               source.ts meta.function.ts meta.function.type.parameter.ts punctuation.definition.parameters.end.ts
                ^
                source.ts meta.function.ts meta.return.type.ts
                 ^
                 source.ts meta.function.ts meta.return.type.ts
                  ^
                  source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.brace.square.ts
                   ^^^^^^
                   source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts support.type.primitive.ts
                         ^
                         source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts
                          ^
                          source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.paren.cover.ts
                           ^
                           source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.paren.cover.ts meta.brace.round.ts
                            ^
                            source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.paren.cover.ts meta.brace.round.ts
                             ^
                             source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts
                              ^^
                              source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts storage.type.function.arrow.ts
                                ^
                                source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts meta.object.type.ts
                                 ^
                                 source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts meta.object.type.ts punctuation.definition.block.ts
                                  ^
                                  source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts
                                   ^
                                   source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts variable.object.property.ts
                                    ^
                                    source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts
                                     ^
                                     source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts
                                      ^^^^^^
                                      source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts
                                            ^
                                            source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts
                                             ^
                                             source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.type.function.return.ts meta.object.type.ts punctuation.definition.block.ts
                                              ^
                                              source.ts meta.function.ts meta.return.type.ts meta.type.tuple.ts meta.brace.square.ts
                                               ^
                                               source.ts meta.function.ts meta.return.type.ts
                                                ^
                                                source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts
                                                 ^^
                                                 source.ts meta.function.ts meta.decl.block.ts
>    const x = 0;
 ^^^^
 source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts
     ^^^^^
     source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts storage.type.ts
          ^
          source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts
           ^
           source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.other.readwrite.ts
            ^
            source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
             ^
             source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.assignment.ts
              ^
              source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
               ^
               source.ts meta.function.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts constant.numeric.decimal.ts
                ^^^
                source.ts meta.function.ts meta.decl.block.ts
>}
 ^
 source.ts meta.function.ts meta.decl.block.ts punctuation.definition.block.ts