original file
-----------------------------------
function f() {

    class implements BeingSpreading<Spreading> {
        copy = copy;
        fuse = fuse;
        toInternalSpreading = toInternalSpreading;
        toFiltersOnlySpreading = toFiltersOnlySpreading;
        toResultsOnlySpreading = toResultsOnlySpreading;
        toNormalSpreading = toNormalSpreading;
        toNormalOrMaximizedSpreadingIfNotYet = ensureNormalOrMaximizedSpreading;
    };

    return new class implements BeingSpreading<Spreading> {
        copy = copy;
        fuse = fuse;
        toInternalSpreading = toInternalSpreading;
        toFiltersOnlySpreading = toFiltersOnlySpreading;
        toResultsOnlySpreading = toResultsOnlySpreading;
        toNormalSpreading = toNormalSpreading;
        toNormalOrMaximizedSpreadingIfNotYet = ensureNormalOrMaximizedSpreading;
    };
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>function f() {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^
          source.ts meta.function.ts meta.definition.function.ts entity.name.function.ts
           ^
           source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
            ^
            source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.end.ts
             ^
             source.ts meta.function.ts
              ^
              source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
>
 ^
 source.ts meta.function.ts meta.block.ts
>    class implements BeingSpreading<Spreading> {
 ^^^^
 source.ts meta.function.ts meta.block.ts
     ^^^^^
     source.ts meta.function.ts meta.block.ts meta.class.ts storage.type.class.ts
          ^
          source.ts meta.function.ts meta.block.ts meta.class.ts
           ^^^^^^^^^^
           source.ts meta.function.ts meta.block.ts meta.class.ts storage.modifier.ts
                     ^
                     source.ts meta.function.ts meta.block.ts meta.class.ts
                      ^^^^^^^^^^^^^^
                      source.ts meta.function.ts meta.block.ts meta.class.ts entity.other.inherited-class.ts
                                    ^
                                    source.ts meta.function.ts meta.block.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                                     ^^^^^^^^^
                                     source.ts meta.function.ts meta.block.ts meta.class.ts meta.type.parameters.ts entity.name.type.ts
                                              ^
                                              source.ts meta.function.ts meta.block.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                               ^
                                               source.ts meta.function.ts meta.block.ts meta.class.ts
                                                ^
                                                source.ts meta.function.ts meta.block.ts meta.class.ts punctuation.definition.block.ts
>        copy = copy;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
         ^^^^
         source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
             ^
             source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
              ^
              source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
               ^
               source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                ^^^^
                source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                    ^
                    source.ts meta.function.ts meta.block.ts meta.class.ts punctuation.terminator.statement.ts
>        fuse = fuse;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
         ^^^^
         source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
             ^
             source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
              ^
              source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
               ^
               source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                ^^^^
                source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                    ^
                    source.ts meta.function.ts meta.block.ts meta.class.ts punctuation.terminator.statement.ts
>        toInternalSpreading = toInternalSpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                            ^
                            source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                             ^
                             source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                              ^
                              source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                               ^^^^^^^^^^^^^^^^^^^
                               source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                                  ^
                                                  source.ts meta.function.ts meta.block.ts meta.class.ts punctuation.terminator.statement.ts
>        toFiltersOnlySpreading = toFiltersOnlySpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                               ^
                               source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                                ^
                                source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                                 ^
                                 source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                                  ^^^^^^^^^^^^^^^^^^^^^^
                                  source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                                        ^
                                                        source.ts meta.function.ts meta.block.ts meta.class.ts punctuation.terminator.statement.ts
>        toResultsOnlySpreading = toResultsOnlySpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                               ^
                               source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                                ^
                                source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                                 ^
                                 source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                                  ^^^^^^^^^^^^^^^^^^^^^^
                                  source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                                        ^
                                                        source.ts meta.function.ts meta.block.ts meta.class.ts punctuation.terminator.statement.ts
>        toNormalSpreading = toNormalSpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                          ^
                          source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                           ^
                           source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                            ^
                            source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                             ^^^^^^^^^^^^^^^^^
                             source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                              ^
                                              source.ts meta.function.ts meta.block.ts meta.class.ts punctuation.terminator.statement.ts
>        toNormalOrMaximizedSpreadingIfNotYet = ensureNormalOrMaximizedSpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                                             ^
                                             source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                                              ^
                                              source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                                               ^
                                               source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                source.ts meta.function.ts meta.block.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                                                                ^
                                                                                source.ts meta.function.ts meta.block.ts meta.class.ts punctuation.terminator.statement.ts
>    };
 ^^^^
 source.ts meta.function.ts meta.block.ts meta.class.ts
     ^
     source.ts meta.function.ts meta.block.ts meta.class.ts punctuation.definition.block.ts
      ^
      source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
>
 ^
 source.ts meta.function.ts meta.block.ts
>    return new class implements BeingSpreading<Spreading> {
 ^^^^
 source.ts meta.function.ts meta.block.ts
     ^^^^^^
     source.ts meta.function.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.function.ts meta.block.ts
            ^^^
            source.ts meta.function.ts meta.block.ts new.expr.ts keyword.operator.new.ts
               ^
               source.ts meta.function.ts meta.block.ts new.expr.ts
                ^^^^^
                source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts storage.type.class.ts
                     ^
                     source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts
                      ^^^^^^^^^^
                      source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts storage.modifier.ts
                                ^
                                source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts
                                 ^^^^^^^^^^^^^^
                                 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts entity.other.inherited-class.ts
                                               ^
                                               source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
                                                ^^^^^^^^^
                                                source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.type.parameters.ts entity.name.type.ts
                                                         ^
                                                         source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                                                          ^
                                                          source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts
                                                           ^
                                                           source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts punctuation.definition.block.ts
>        copy = copy;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
         ^^^^
         source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
             ^
             source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
              ^
              source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
               ^
               source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                ^^^^
                source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                    ^
                    source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts punctuation.terminator.statement.ts
>        fuse = fuse;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
         ^^^^
         source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
             ^
             source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
              ^
              source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
               ^
               source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                ^^^^
                source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                    ^
                    source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts punctuation.terminator.statement.ts
>        toInternalSpreading = toInternalSpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                            ^
                            source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                             ^
                             source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                              ^
                              source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                               ^^^^^^^^^^^^^^^^^^^
                               source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                                  ^
                                                  source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts punctuation.terminator.statement.ts
>        toFiltersOnlySpreading = toFiltersOnlySpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                               ^
                               source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                                ^
                                source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                                 ^
                                 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                                  ^^^^^^^^^^^^^^^^^^^^^^
                                  source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                                        ^
                                                        source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts punctuation.terminator.statement.ts
>        toResultsOnlySpreading = toResultsOnlySpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                               ^
                               source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                                ^
                                source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                                 ^
                                 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                                  ^^^^^^^^^^^^^^^^^^^^^^
                                  source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                                        ^
                                                        source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts punctuation.terminator.statement.ts
>        toNormalSpreading = toNormalSpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                          ^
                          source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                           ^
                           source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                            ^
                            source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                             ^^^^^^^^^^^^^^^^^
                             source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                              ^
                                              source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts punctuation.terminator.statement.ts
>        toNormalOrMaximizedSpreadingIfNotYet = ensureNormalOrMaximizedSpreading;
 ^^^^^^^^
 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                                             ^
                                             source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                                              ^
                                              source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                                               ^
                                               source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts meta.field.declaration.ts variable.other.readwrite.ts
                                                                                ^
                                                                                source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts punctuation.terminator.statement.ts
>    };
 ^^^^
 source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts
     ^
     source.ts meta.function.ts meta.block.ts new.expr.ts meta.class.ts punctuation.definition.block.ts
      ^
      source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
>}
 ^
 source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts