original file
-----------------------------------
/* Function overload tests */
^^export function ^^testFunctionOverload(p: number): new() => any
^^export function ^^testFunctionOverload(p: string)
^^export function ^^testFunctionOverload(p: string [])
^^export function ^^testFunctionOverload(p: {})
^^export function ^^testFunctionOverload(p: {a: A, b:B} | string [])
^^export function ^^testFunctionOverload(p: any): new() => any {
    ^^throw new Error("")
}

^^export function ^^testFunctionOverloadWithSemicolon(p: number): new () => any;
^^export function ^^testFunctionOverloadWithSemicolon(p: string);
^^export function ^^testFunctionOverloadWithSemicolon(p: string[]);
^^export function ^^testFunctionOverloadWithSemicolon(p: {});
^^export function ^^testFunctionOverloadWithSemicolon(p: { a: A, b: B } | string[]);
^^export function ^^testFunctionOverloadWithSemicolon(p: any): new () => any {
    ^^throw new Error("")
}


class testClass {
    /* Function overload tests */
    ^^public ^^testMethodOverload(p: number): new() => any
    ^^public ^^testMethodOverload(p: string)
    ^^public ^^testMethodOverload(p: string [])
    ^^public ^^testMethodOverload(p: {})
    ^^public ^^testMethodOverload(p: {a: A, b:B} | string [])
    ^^public ^^testMethodOverload(p: any): new() => any {
        ^^throw new Error("")
    }

    ^^public ^^testMethodOverloadWithSemicolon(p: number): new () => any;
    ^^public ^^testMethodOverloadWithSemicolon(p: string);
    ^^public ^^testMethodOverloadWithSemicolon(p: string[]);
    ^^public ^^testMethodOverloadWithSemicolon(p: {});
    ^^public ^^testMethodOverloadWithSemicolon(p: { a: A, b: B } | string[]);
    ^^public ^^testMethodOverloadWithSemicolon(p: any): new () => any {
        ^^throw new Error("")
    }
}

interface I {
    ^^foo(): number
    ^^bar(): string;
}

abstract class C {
    ^^abstract ^^foo()
    ^^abstract ^^bar()
}
-----------------------------------

>/* Function overload tests */
 ^^
 source.ts comment.block.ts punctuation.definition.comment.ts
   ^^^^^^^^^^^^^^^^^^^^^^^^^
   source.ts comment.block.ts
                            ^^
                            source.ts comment.block.ts punctuation.definition.comment.ts
>export function testFunctionOverload(p: number): new() => any
 ^^^^^^
 source.ts meta.function.ts storage.type.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts entity.name.function.ts
                                     ^
                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                       ^
                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                        ^
                                        source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                         ^^^^^^
                                         source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                               ^
                                               source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                ^
                                                source.ts meta.function.ts meta.return.type.ts
                                                 ^
                                                 source.ts meta.function.ts meta.return.type.ts
                                                  ^^^
                                                  source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts keyword.control.ts
                                                     ^
                                                     source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                                                      ^
                                                      source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                                                       ^
                                                       source.ts meta.function.ts meta.return.type.ts
                                                        ^^
                                                        source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts keyword.operator.ts
                                                          ^
                                                          source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                                                           ^^^
                                                           source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.type.primitive.ts support.type.ts
>export function testFunctionOverload(p: string)
 ^^^^^^
 source.ts meta.function.ts meta.function.overload.ts storage.type.ts
       ^
       source.ts meta.function.ts meta.function.overload.ts
        ^^^^^^^^
        source.ts meta.function.ts meta.function.overload.ts storage.type.function.ts
                ^
                source.ts meta.function.ts meta.function.overload.ts
                 ^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts
                                     ^
                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                       ^
                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                        ^
                                        source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                         ^^^^^^
                                         source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                               ^
                                               source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
>export function testFunctionOverload(p: string [])
 ^^^^^^
 source.ts meta.function.ts meta.function.overload.ts storage.type.ts
       ^
       source.ts meta.function.ts meta.function.overload.ts
        ^^^^^^^^
        source.ts meta.function.ts meta.function.overload.ts storage.type.function.ts
                ^
                source.ts meta.function.ts meta.function.overload.ts
                 ^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts
                                     ^
                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                       ^
                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                        ^
                                        source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                         ^^^^^^
                                         source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                               ^
                                               source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                ^
                                                source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                 ^
                                                 source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                  ^
                                                  source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
>export function testFunctionOverload(p: {})
 ^^^^^^
 source.ts meta.function.ts meta.function.overload.ts storage.type.ts
       ^
       source.ts meta.function.ts meta.function.overload.ts
        ^^^^^^^^
        source.ts meta.function.ts meta.function.overload.ts storage.type.function.ts
                ^
                source.ts meta.function.ts meta.function.overload.ts
                 ^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts
                                     ^
                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                       ^
                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                        ^
                                        source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                         ^
                                         source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                          ^
                                          source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                           ^
                                           source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
>export function testFunctionOverload(p: {a: A, b:B} | string [])
 ^^^^^^
 source.ts meta.function.ts meta.function.overload.ts storage.type.ts
       ^
       source.ts meta.function.ts meta.function.overload.ts
        ^^^^^^^^
        source.ts meta.function.ts meta.function.overload.ts storage.type.function.ts
                ^
                source.ts meta.function.ts meta.function.overload.ts
                 ^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts
                                     ^
                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                       ^
                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                        ^
                                        source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                         ^
                                         source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                          ^
                                          source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts variable.ts
                                           ^^^
                                           source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                              ^
                                              source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts
                                               ^
                                               source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                ^
                                                source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts variable.ts
                                                 ^^
                                                 source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                   ^
                                                   source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                                    ^
                                                    source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                     ^
                                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts keyword.operator.type.ts
                                                      ^
                                                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                       ^^^^^^
                                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                             ^
                                                             source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                              ^
                                                              source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                               ^
                                                               source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                                ^
                                                                source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
>export function testFunctionOverload(p: any): new() => any {
 ^^^^^^
 source.ts meta.function.ts meta.function.overload.ts storage.type.ts
       ^
       source.ts meta.function.ts meta.function.overload.ts
        ^^^^^^^^
        source.ts meta.function.ts meta.function.overload.ts storage.type.function.ts
                ^
                source.ts meta.function.ts meta.function.overload.ts
                 ^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts meta.function.overload.ts entity.name.function.ts
                                     ^
                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                       ^
                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                        ^
                                        source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                         ^^^
                                         source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                            ^
                                            source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                             ^
                                             source.ts meta.function.ts meta.return.type.ts
                                              ^
                                              source.ts meta.function.ts meta.return.type.ts
                                               ^^^
                                               source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts keyword.control.ts
                                                  ^
                                                  source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                                                   ^
                                                   source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                                                    ^
                                                    source.ts meta.function.ts meta.return.type.ts
                                                     ^^
                                                     source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts keyword.operator.ts
                                                       ^
                                                       source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                                                        ^^^
                                                        source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.type.primitive.ts support.type.ts
                                                           ^
                                                           source.ts meta.function.ts meta.return.type.ts
                                                            ^
                                                            source.ts meta.function.ts meta.decl.block.ts meta.brace.curly.ts
>    throw new Error("")
 ^^^^
 source.ts meta.function.ts meta.decl.block.ts
     ^^^^^
     source.ts meta.function.ts meta.decl.block.ts keyword.control.ts
          ^
          source.ts meta.function.ts meta.decl.block.ts
           ^^^
           source.ts meta.function.ts meta.decl.block.ts new.expr.ts keyword.others.ts
              ^
              source.ts meta.function.ts meta.decl.block.ts new.expr.ts
               ^^^^^
               source.ts meta.function.ts meta.decl.block.ts new.expr.ts meta.type.name.ts
                    ^
                    source.ts meta.function.ts meta.decl.block.ts meta.brace.paren.ts
                     ^
                     source.ts meta.function.ts meta.decl.block.ts string.double.ts
                      ^
                      source.ts meta.function.ts meta.decl.block.ts string.double.ts
                       ^
                       source.ts meta.function.ts meta.decl.block.ts meta.brace.paren.ts
>}
 ^
 source.ts meta.function.ts meta.decl.block.ts meta.brace.curly.ts
>
 ^
 source.ts
>export function testFunctionOverloadWithSemicolon(p: number): new () => any;
 ^^^^^^
 source.ts meta.function.ts storage.type.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts entity.name.function.ts
                                                  ^
                                                  source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                   ^
                                                   source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                                    ^
                                                    source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                     ^
                                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                      ^^^^^^
                                                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                            ^
                                                            source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                             ^
                                                             source.ts meta.function.ts meta.return.type.ts
                                                              ^
                                                              source.ts meta.function.ts meta.return.type.ts
                                                               ^^^
                                                               source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts keyword.control.ts
                                                                  ^^
                                                                  source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                                                                    ^
                                                                    source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                                                                     ^
                                                                     source.ts meta.function.ts meta.return.type.ts
                                                                      ^^
                                                                      source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts keyword.operator.ts
                                                                        ^
                                                                        source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                                                                         ^^^
                                                                         source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.type.primitive.ts support.type.ts
                                                                            ^^
                                                                            source.ts
>export function testFunctionOverloadWithSemicolon(p: string);
 ^^^^^^
 source.ts meta.function.ts storage.type.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts entity.name.function.ts
                                                  ^
                                                  source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                   ^
                                                   source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                                    ^
                                                    source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                     ^
                                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                      ^^^^^^
                                                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                            ^
                                                            source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                             ^^
                                                             source.ts
>export function testFunctionOverloadWithSemicolon(p: string[]);
 ^^^^^^
 source.ts meta.function.ts storage.type.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts entity.name.function.ts
                                                  ^
                                                  source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                   ^
                                                   source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                                    ^
                                                    source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                     ^
                                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                      ^^^^^^
                                                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                            ^
                                                            source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                             ^
                                                             source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                              ^
                                                              source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                               ^^
                                                               source.ts
>export function testFunctionOverloadWithSemicolon(p: {});
 ^^^^^^
 source.ts meta.function.ts storage.type.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts entity.name.function.ts
                                                  ^
                                                  source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                   ^
                                                   source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                                    ^
                                                    source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                     ^
                                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                      ^
                                                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                                       ^
                                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                                        ^
                                                        source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                         ^^
                                                         source.ts
>export function testFunctionOverloadWithSemicolon(p: { a: A, b: B } | string[]);
 ^^^^^^
 source.ts meta.function.ts storage.type.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts entity.name.function.ts
                                                  ^
                                                  source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                   ^
                                                   source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                                    ^
                                                    source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                     ^
                                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                      ^
                                                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                                       ^
                                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                        ^
                                                        source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts variable.ts
                                                         ^^^
                                                         source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                            ^
                                                            source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts
                                                             ^
                                                             source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                              ^
                                                              source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts variable.ts
                                                               ^^^^
                                                               source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                                   ^
                                                                   source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                                                    ^
                                                                    source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                                     ^
                                                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts keyword.operator.type.ts
                                                                      ^
                                                                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                                       ^^^^^^
                                                                       source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                                             ^
                                                                             source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                                              ^
                                                                              source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                                               ^
                                                                               source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                                                ^^
                                                                                source.ts
>export function testFunctionOverloadWithSemicolon(p: any): new () => any {
 ^^^^^^
 source.ts meta.function.ts storage.type.ts
       ^
       source.ts meta.function.ts
        ^^^^^^^^
        source.ts meta.function.ts storage.type.function.ts
                ^
                source.ts meta.function.ts
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 source.ts meta.function.ts entity.name.function.ts
                                                  ^
                                                  source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                   ^
                                                   source.ts meta.function.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                                    ^
                                                    source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                     ^
                                                     source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                      ^^^
                                                      source.ts meta.function.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                         ^
                                                         source.ts meta.function.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                          ^
                                                          source.ts meta.function.ts meta.return.type.ts
                                                           ^
                                                           source.ts meta.function.ts meta.return.type.ts
                                                            ^^^
                                                            source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts keyword.control.ts
                                                               ^^
                                                               source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                                                                 ^
                                                                 source.ts meta.function.ts meta.return.type.ts meta.type.paren.cover.ts
                                                                  ^
                                                                  source.ts meta.function.ts meta.return.type.ts
                                                                   ^^
                                                                   source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts keyword.operator.ts
                                                                     ^
                                                                     source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                                                                      ^^^
                                                                      source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts meta.type.primitive.ts support.type.ts
                                                                         ^
                                                                         source.ts meta.function.ts meta.return.type.ts
                                                                          ^
                                                                          source.ts meta.function.ts meta.decl.block.ts meta.brace.curly.ts
>    throw new Error("")
 ^^^^
 source.ts meta.function.ts meta.decl.block.ts
     ^^^^^
     source.ts meta.function.ts meta.decl.block.ts keyword.control.ts
          ^
          source.ts meta.function.ts meta.decl.block.ts
           ^^^
           source.ts meta.function.ts meta.decl.block.ts new.expr.ts keyword.others.ts
              ^
              source.ts meta.function.ts meta.decl.block.ts new.expr.ts
               ^^^^^
               source.ts meta.function.ts meta.decl.block.ts new.expr.ts meta.type.name.ts
                    ^
                    source.ts meta.function.ts meta.decl.block.ts meta.brace.paren.ts
                     ^
                     source.ts meta.function.ts meta.decl.block.ts string.double.ts
                      ^
                      source.ts meta.function.ts meta.decl.block.ts string.double.ts
                       ^
                       source.ts meta.function.ts meta.decl.block.ts meta.brace.paren.ts
>}
 ^
 source.ts meta.function.ts meta.decl.block.ts meta.brace.curly.ts
>
 ^
 source.ts
>
 ^
 source.ts
>class testClass {
 ^^^^^
 source.ts meta.declaration.object.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts
       ^^^^^^^^^
       source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
                ^
                source.ts meta.declaration.object.ts
                 ^
                 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>    /* Function overload tests */
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^
     source.ts meta.declaration.object.ts meta.object.body.ts comment.block.ts punctuation.definition.comment.ts
       ^^^^^^^^^^^^^^^^^^^^^^^^^
       source.ts meta.declaration.object.ts meta.object.body.ts comment.block.ts
                                ^^
                                source.ts meta.declaration.object.ts meta.object.body.ts comment.block.ts punctuation.definition.comment.ts
>    public testMethodOverload(p: number): new() => any
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
            ^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                              ^
                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                               ^
                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                ^
                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                 ^
                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                  ^^^^^^
                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                        ^
                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                         ^
                                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                          ^
                                          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                           ^^^
                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts keyword.others.ts
                                              ^
                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.paren.cover.ts
                                               ^
                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.paren.cover.ts
                                                ^
                                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                                 ^^
                                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts keyword.operator.ts
                                                   ^
                                                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts
                                                    ^^^
                                                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts meta.type.primitive.ts support.type.ts
>    public testMethodOverload(p: string)
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts
            ^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts entity.name.function.ts
                              ^
                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                               ^
                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                ^
                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                 ^
                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                  ^^^^^^
                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                        ^
                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
>    public testMethodOverload(p: string [])
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts
            ^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts entity.name.function.ts
                              ^
                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                               ^
                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                ^
                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                 ^
                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                  ^^^^^^
                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                        ^
                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                         ^
                                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                          ^
                                          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                           ^
                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
>    public testMethodOverload(p: {})
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts
            ^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts entity.name.function.ts
                              ^
                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                               ^
                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                ^
                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                 ^
                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                  ^
                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                   ^
                                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                    ^
                                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
>    public testMethodOverload(p: {a: A, b:B} | string [])
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts
            ^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts entity.name.function.ts
                              ^
                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                               ^
                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                ^
                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                 ^
                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                  ^
                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                   ^
                                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts variable.ts
                                    ^^^
                                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                       ^
                                       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts
                                        ^
                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                         ^
                                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts variable.ts
                                          ^^
                                          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                            ^
                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                             ^
                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                              ^
                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts keyword.operator.type.ts
                                               ^
                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                ^^^^^^
                                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                      ^
                                                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                       ^
                                                       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                        ^
                                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                         ^
                                                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
>    public testMethodOverload(p: any): new() => any {
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts
            ^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts entity.name.function.ts
                              ^
                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                               ^
                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                ^
                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                 ^
                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                  ^^^
                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                     ^
                                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                       ^
                                       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                        ^^^
                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts keyword.others.ts
                                           ^
                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.paren.cover.ts
                                            ^
                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.paren.cover.ts
                                             ^
                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                              ^^
                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts keyword.operator.ts
                                                ^
                                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts
                                                 ^^^
                                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts meta.type.primitive.ts support.type.ts
                                                    ^
                                                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                                     ^
                                                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>        throw new Error("")
 ^^^^^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
         ^^^^^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts keyword.control.ts
              ^
              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
               ^^^
               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts new.expr.ts keyword.others.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts new.expr.ts
                   ^^^^^
                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts new.expr.ts meta.type.name.ts
                        ^
                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.paren.ts
                         ^
                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                          ^
                          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                           ^
                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.paren.ts
>    }
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
     ^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
>    public testMethodOverloadWithSemicolon(p: number): new () => any;
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                                           ^
                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                            ^
                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                             ^
                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                              ^
                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                               ^^^^^^
                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                     ^
                                                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                      ^
                                                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                                       ^
                                                       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                                        ^^^
                                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts keyword.others.ts
                                                           ^^
                                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.paren.cover.ts
                                                             ^
                                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.paren.cover.ts
                                                              ^
                                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                                               ^^
                                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts keyword.operator.ts
                                                                 ^
                                                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts
                                                                  ^^^
                                                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts meta.type.primitive.ts support.type.ts
                                                                     ^^
                                                                     source.ts meta.declaration.object.ts meta.object.body.ts
>    public testMethodOverloadWithSemicolon(p: string);
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                                           ^
                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                            ^
                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                             ^
                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                              ^
                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                               ^^^^^^
                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                     ^
                                                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                      ^^
                                                      source.ts meta.declaration.object.ts meta.object.body.ts
>    public testMethodOverloadWithSemicolon(p: string[]);
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                                           ^
                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                            ^
                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                             ^
                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                              ^
                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                               ^^^^^^
                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                     ^
                                                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                      ^
                                                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                       ^
                                                       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                        ^^
                                                        source.ts meta.declaration.object.ts meta.object.body.ts
>    public testMethodOverloadWithSemicolon(p: {});
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                                           ^
                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                            ^
                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                             ^
                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                              ^
                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                               ^
                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                                ^
                                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                                 ^
                                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                  ^^
                                                  source.ts meta.declaration.object.ts meta.object.body.ts
>    public testMethodOverloadWithSemicolon(p: { a: A, b: B } | string[]);
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                                           ^
                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                            ^
                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                             ^
                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                              ^
                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                               ^
                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                                ^
                                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                 ^
                                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts variable.ts
                                                  ^^^
                                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                     ^
                                                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts
                                                      ^
                                                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                       ^
                                                       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts variable.ts
                                                        ^^^^
                                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                                                            ^
                                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.object.type.ts meta.brace.curly.ts
                                                             ^
                                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                              ^
                                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts keyword.operator.type.ts
                                                               ^
                                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                                                ^^^^^^
                                                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                                      ^
                                                                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                                       ^
                                                                       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.tuple.ts meta.brace.square.ts
                                                                        ^
                                                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                                         ^^
                                                                         source.ts meta.declaration.object.ts meta.object.body.ts
>    public testMethodOverloadWithSemicolon(p: any): new () => any {
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                                           ^
                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                            ^
                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts parameter.name.ts variable.parameter.ts
                                             ^
                                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                              ^
                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts
                                               ^^^
                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                                  ^
                                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                                                   ^
                                                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                                    ^
                                                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                                     ^^^
                                                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts keyword.others.ts
                                                        ^^
                                                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.paren.cover.ts
                                                          ^
                                                          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.paren.cover.ts
                                                           ^
                                                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                                            ^^
                                                            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts keyword.operator.ts
                                                              ^
                                                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts
                                                               ^^^
                                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.function.return.ts meta.type.primitive.ts support.type.ts
                                                                  ^
                                                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                                                                   ^
                                                                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>        throw new Error("")
 ^^^^^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
         ^^^^^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts keyword.control.ts
              ^
              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
               ^^^
               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts new.expr.ts keyword.others.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts new.expr.ts
                   ^^^^^
                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts new.expr.ts meta.type.name.ts
                        ^
                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.paren.ts
                         ^
                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                          ^
                          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                           ^
                           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.paren.ts
>    }
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
     ^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>
 ^
 source.ts
>interface I {
 ^^^^^^^^^
 source.ts meta.declaration.object.ts storage.type.ts
          ^
          source.ts meta.declaration.object.ts
           ^
           source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
            ^
            source.ts meta.declaration.object.ts
             ^
             source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>    foo(): number
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
        ^
        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
            ^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
>    bar(): string;
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
     ^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts entity.name.function.ts
        ^
        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
            ^^^^^^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                  ^^
                  source.ts meta.declaration.object.ts meta.object.body.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>
 ^
 source.ts
>abstract class C {
 ^^^^^^^^
 source.ts meta.declaration.object.ts storage.modifier.ts
         ^
         source.ts meta.declaration.object.ts
          ^^^^^
          source.ts meta.declaration.object.ts storage.type.ts
               ^
               source.ts meta.declaration.object.ts
                ^
                source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
                 ^
                 source.ts meta.declaration.object.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>    abstract foo()
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
     ^^^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
             ^
             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
              ^^^
              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                 ^
                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
>    abstract bar()
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
     ^^^^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts storage.modifier.ts
             ^
             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts
              ^^^
              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.method.overload.declaration.ts entity.name.function.ts
                 ^
                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts