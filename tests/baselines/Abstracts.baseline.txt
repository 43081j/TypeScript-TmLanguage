original file
-----------------------------------
^^abstract class Animal {
	  public age: number;
	  public yearsLeft() { return 20 - this.age; }
	  ^^abstract makeSound(): string;
}

class Cow extends Animal {
	  makeSound() { return "Moo"; }
}

class Cat extends Animal {
	  makeSound() { return "Meow"; }
}

let cow = new Cow();
cow.makeSound();
-----------------------------------

>abstract class Animal {
 ^^^^^^^^
 source.ts meta.declaration.object.ts storage.modifier.ts
         ^
         source.ts meta.declaration.object.ts
          ^^^^^
          source.ts meta.declaration.object.ts storage.type.ts
               ^
               source.ts meta.declaration.object.ts
                ^^^^^^
                source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
                      ^
                      source.ts meta.declaration.object.ts
                       ^
                       source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>	  public age: number;
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
    ^^^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts storage.modifier.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.field.declaration.ts
           ^^^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.field.declaration.ts variable.ts
              ^^
              source.ts meta.declaration.object.ts meta.object.body.ts meta.field.declaration.ts
                ^^^^^^
                source.ts meta.declaration.object.ts meta.object.body.ts meta.field.declaration.ts meta.type.primitive.ts support.type.ts
                      ^^
                      source.ts meta.declaration.object.ts meta.object.body.ts
>	  public yearsLeft() { return 20 - this.age; }
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
    ^^^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
           ^^^^^^^^^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                    ^
                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                     ^
                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                      ^
                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
                       ^
                       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
                        ^
                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                         ^^^^^^
                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts keyword.control.ts
                               ^
                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                                ^^
                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts constant.numeric.ts
                                  ^
                                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                                   ^
                                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts keyword.operator.arithmetic.ts
                                    ^
                                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                                     ^^^^
                                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts constant.language.this.ts
                                         ^^^^^^
                                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                                               ^
                                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>	  abstract makeSound(): string;
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
    ^^^^^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts storage.modifier.ts
            ^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
             ^^^^^^^^^
             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                      ^
                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                       ^
                       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                        ^
                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                         ^
                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts
                          ^^^^^^
                          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.type.annotation.ts meta.type.primitive.ts support.type.ts
                                ^^
                                source.ts meta.declaration.object.ts meta.object.body.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>
 ^
 source.ts
>class Cow extends Animal {
 ^^^^^
 source.ts meta.declaration.object.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts
       ^^^
       source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
          ^
          source.ts meta.declaration.object.ts
           ^^^^^^^
           source.ts meta.declaration.object.ts meta.object.heritage.ts keyword.other.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.heritage.ts
                   ^^^^^^
                   source.ts meta.declaration.object.ts meta.object.heritage.ts meta.object.heritage.parent.ts support.type.ts
                         ^
                         source.ts meta.declaration.object.ts meta.object.heritage.ts
                          ^
                          source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>	  makeSound() { return "Moo"; }
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
    ^^^^^^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
             ^
             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
              ^
              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
               ^
               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
                ^
                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
                 ^
                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                  ^^^^^^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts keyword.control.ts
                        ^
                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                         ^
                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                          ^^^
                          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                             ^
                             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                              ^^
                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                                ^
                                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>
 ^
 source.ts
>class Cat extends Animal {
 ^^^^^
 source.ts meta.declaration.object.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts
       ^^^
       source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
          ^
          source.ts meta.declaration.object.ts
           ^^^^^^^
           source.ts meta.declaration.object.ts meta.object.heritage.ts keyword.other.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.heritage.ts
                   ^^^^^^
                   source.ts meta.declaration.object.ts meta.object.heritage.ts meta.object.heritage.parent.ts support.type.ts
                         ^
                         source.ts meta.declaration.object.ts meta.object.heritage.ts
                          ^
                          source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>	  makeSound() { return "Meow"; }
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts
    ^^^^^^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
             ^
             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
              ^
              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
               ^
               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
                ^
                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
                 ^
                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                  ^^^^^^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts keyword.control.ts
                        ^
                        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                         ^
                         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                          ^^^^
                          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                              ^
                              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts string.double.ts
                               ^^
                               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
                                 ^
                                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>
 ^
 source.ts
>let cow = new Cow();
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.ts
        ^^
        source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
          ^
          source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
           ^^^
           source.ts meta.var.expr.ts meta.var-single-variable.expr.ts new.expr.ts keyword.others.ts
              ^
              source.ts meta.var.expr.ts meta.var-single-variable.expr.ts new.expr.ts
               ^^^
               source.ts meta.var.expr.ts meta.var-single-variable.expr.ts new.expr.ts meta.type.name.ts
                  ^
                  source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.brace.paren.ts
                   ^
                   source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.brace.paren.ts
                    ^^
                    source.ts
>cow.makeSound();
 ^^^^^^^^^^^^^
 source.ts
              ^
              source.ts meta.brace.paren.ts
               ^
               source.ts meta.brace.paren.ts
                ^^
                source.ts