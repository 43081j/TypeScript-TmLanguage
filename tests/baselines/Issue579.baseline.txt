original file
-----------------------------------
function f(): (x: number) => any {
    return true ? x => f() : x => 0;
}
const x = 0; // no highlight in rest of file
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>function f(): (x: number) => any {
 ^^^^^^^^
 source.ts meta.function.ts storage.type.function.ts
         ^
         source.ts meta.function.ts
          ^
          source.ts meta.function.ts meta.definition.function.ts entity.name.function.ts
           ^
           source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
            ^
            source.ts meta.function.ts meta.parameters.ts punctuation.definition.parameters.end.ts
             ^
             source.ts meta.function.ts meta.return.type.ts keyword.operator.type.annotation.ts
              ^
              source.ts meta.function.ts meta.return.type.ts
               ^
               source.ts meta.function.ts meta.return.type.ts meta.type.function.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                ^
                source.ts meta.function.ts meta.return.type.ts meta.type.function.ts meta.parameters.ts variable.parameter.ts
                 ^
                 source.ts meta.function.ts meta.return.type.ts meta.type.function.ts meta.parameters.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                  ^
                  source.ts meta.function.ts meta.return.type.ts meta.type.function.ts meta.parameters.ts meta.type.annotation.ts
                   ^^^^^^
                   source.ts meta.function.ts meta.return.type.ts meta.type.function.ts meta.parameters.ts meta.type.annotation.ts support.type.primitive.ts
                         ^
                         source.ts meta.function.ts meta.return.type.ts meta.type.function.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                          ^
                          source.ts meta.function.ts meta.return.type.ts
                           ^^
                           source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts storage.type.function.arrow.ts
                             ^
                             source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                              ^^^
                              source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts support.type.primitive.ts
                                 ^
                                 source.ts meta.function.ts meta.return.type.ts meta.type.function.return.ts
                                  ^
                                  source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
>    return true ? x => f() : x => 0;
 ^^^^
 source.ts meta.function.ts meta.block.ts
     ^^^^^^
     source.ts meta.function.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.function.ts meta.block.ts
            ^^^^
            source.ts meta.function.ts meta.block.ts constant.language.boolean.true.ts
                ^
                source.ts meta.function.ts meta.block.ts
                 ^
                 source.ts meta.function.ts meta.block.ts keyword.operator.ternary.ts
                  ^
                  source.ts meta.function.ts meta.block.ts
                   ^
                   source.ts meta.function.ts meta.block.ts meta.arrow.ts variable.parameter.ts
                    ^
                    source.ts meta.function.ts meta.block.ts meta.arrow.ts
                     ^^
                     source.ts meta.function.ts meta.block.ts meta.arrow.ts storage.type.function.arrow.ts
                       ^
                       source.ts meta.function.ts meta.block.ts meta.arrow.ts
                        ^
                        source.ts meta.function.ts meta.block.ts meta.function-call.ts entity.name.function.ts
                         ^
                         source.ts meta.function.ts meta.block.ts meta.brace.round.ts
                          ^
                          source.ts meta.function.ts meta.block.ts meta.brace.round.ts
                           ^
                           source.ts meta.function.ts meta.block.ts
                            ^
                            source.ts meta.function.ts meta.block.ts keyword.operator.ternary.ts
                             ^
                             source.ts meta.function.ts meta.block.ts
                              ^
                              source.ts meta.function.ts meta.block.ts meta.arrow.ts variable.parameter.ts
                               ^
                               source.ts meta.function.ts meta.block.ts meta.arrow.ts
                                ^^
                                source.ts meta.function.ts meta.block.ts meta.arrow.ts storage.type.function.arrow.ts
                                  ^
                                  source.ts meta.function.ts meta.block.ts meta.arrow.ts
                                   ^
                                   source.ts meta.function.ts meta.block.ts constant.numeric.decimal.ts
                                    ^
                                    source.ts meta.function.ts meta.block.ts punctuation.terminator.statement.ts
>}
 ^
 source.ts meta.function.ts meta.block.ts punctuation.definition.block.ts
>const x = 0; // no highlight in rest of file
 ^^^^^
 source.ts meta.var.expr.ts storage.type.ts
      ^
      source.ts meta.var.expr.ts
       ^
       source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
        ^
        source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
         ^
         source.ts meta.var.expr.ts keyword.operator.assignment.ts
          ^
          source.ts meta.var.expr.ts
           ^
           source.ts meta.var.expr.ts constant.numeric.decimal.ts
            ^
            source.ts punctuation.terminator.statement.ts
             ^
             source.ts
              ^^
              source.ts comment.line.double-slash.ts punctuation.definition.comment.ts
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                source.ts comment.line.double-slash.ts