original file
-----------------------------------
export const foo = (firstVariable: string, secondVariable: number): string => {
    return "foo"
}

export const bar = (
    firstVariable: string,
    secondVariable: number,
    thirdVariable: string
): string => {
    return "baz"
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>export const foo = (firstVariable: string, secondVariable: number): string => {
 ^^^^^^
 source.ts meta.var.expr.ts keyword.control.export.ts
       ^
       source.ts meta.var.expr.ts
        ^^^^^
        source.ts meta.var.expr.ts storage.type.ts
             ^
             source.ts meta.var.expr.ts
              ^^^
              source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.constant.ts entity.name.function.ts
                 ^
                 source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                  ^
                  source.ts meta.var.expr.ts keyword.operator.assignment.ts
                   ^
                   source.ts meta.var.expr.ts meta.arrow.ts
                    ^
                    source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                     ^^^^^^^^^^^^^
                     source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts variable.parameter.ts
                                  ^
                                  source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                                   ^
                                   source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts meta.type.annotation.ts
                                    ^^^^^^
                                    source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts meta.type.annotation.ts support.type.primitive.ts
                                          ^
                                          source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts punctuation.separator.parameter.ts
                                           ^
                                           source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts
                                            ^^^^^^^^^^^^^^
                                            source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts variable.parameter.ts
                                                          ^
                                                          source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                                                           ^
                                                           source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts meta.type.annotation.ts
                                                            ^^^^^^
                                                            source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts meta.type.annotation.ts support.type.primitive.ts
                                                                  ^
                                                                  source.ts meta.var.expr.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                                                   ^
                                                                   source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts keyword.operator.type.annotation.ts
                                                                    ^
                                                                    source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts
                                                                     ^^^^^^
                                                                     source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts support.type.primitive.ts
                                                                           ^
                                                                           source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts
                                                                            ^^
                                                                            source.ts meta.var.expr.ts meta.arrow.ts storage.type.function.arrow.ts
                                                                              ^
                                                                              source.ts meta.var.expr.ts meta.arrow.ts
                                                                               ^
                                                                               source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>    return "foo"
 ^^^^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
     ^^^^^^
     source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
            ^
            source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.begin.ts
             ^^^
             source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts string.quoted.double.ts
                ^
                source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.end.ts
>}
 ^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>
 ^
 source.ts
>export const bar = (
 ^^^^^^
 source.ts meta.var.expr.ts keyword.control.export.ts
       ^
       source.ts meta.var.expr.ts
        ^^^^^
        source.ts meta.var.expr.ts storage.type.ts
             ^
             source.ts meta.var.expr.ts
              ^^^
              source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.constant.ts entity.name.function.ts
                 ^
                 source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                  ^
                  source.ts meta.var.expr.ts keyword.operator.assignment.ts
                   ^
                   source.ts meta.var.expr.ts
                    ^
                    source.ts meta.var.expr.ts meta.brace.round.ts
>    firstVariable: string,
 ^^^^
 source.ts meta.var.expr.ts
     ^^^^^^^^^^^^^
     source.ts meta.var.expr.ts variable.parameter.ts
                  ^
                  source.ts meta.var.expr.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                   ^
                   source.ts meta.var.expr.ts meta.type.annotation.ts
                    ^^^^^^
                    source.ts meta.var.expr.ts meta.type.annotation.ts support.type.primitive.ts
                          ^
                          source.ts meta.var.expr.ts punctuation.separator.parameter.ts
>    secondVariable: number,
 ^^^^
 source.ts meta.var.expr.ts
     ^^^^^^^^^^^^^^
     source.ts meta.var.expr.ts variable.parameter.ts
                   ^
                   source.ts meta.var.expr.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                    ^
                    source.ts meta.var.expr.ts meta.type.annotation.ts
                     ^^^^^^
                     source.ts meta.var.expr.ts meta.type.annotation.ts support.type.primitive.ts
                           ^
                           source.ts meta.var.expr.ts punctuation.separator.parameter.ts
>    thirdVariable: string
 ^^^^
 source.ts meta.var.expr.ts
     ^^^^^^^^^^^^^
     source.ts meta.var.expr.ts variable.parameter.ts
                  ^
                  source.ts meta.var.expr.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                   ^
                   source.ts meta.var.expr.ts meta.type.annotation.ts
                    ^^^^^^
                    source.ts meta.var.expr.ts meta.type.annotation.ts support.type.primitive.ts
>): string => {
 ^
 source.ts meta.var.expr.ts meta.brace.round.ts
  ^
  source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts keyword.operator.type.annotation.ts
   ^
   source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts
    ^^^^^^
    source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts support.type.primitive.ts
          ^
          source.ts meta.var.expr.ts meta.arrow.ts meta.return.type.arrow.ts
           ^^
           source.ts meta.var.expr.ts meta.arrow.ts storage.type.function.arrow.ts
             ^
             source.ts meta.var.expr.ts meta.arrow.ts
              ^
              source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>    return "baz"
 ^^^^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
     ^^^^^^
     source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts
            ^
            source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.begin.ts
             ^^^
             source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts string.quoted.double.ts
                ^
                source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.end.ts
>}
 ^
 source.ts meta.var.expr.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts