original file
-----------------------------------
var interface = require('./../interface');
var ctrl = require('./controllers');
var utils = require('./../utils');
var Promise = require('bluebird');
var deligate = require('./core');
var log = require('./../log');

var constructor = deligate.then(function(bot)
{
    bot.sendMessage(110224344, 'here is the index');
    bot.on('message', function(message)
    {
        if(utils.telegram.is_command(message.text))
        {
            ctrl.commands(message).catch(function(error_log)
            {
                bot.sendMessage(message.chat.id, interface.text.errors.redirect);
                log.uncaughtException(error_log);
            });
        }
    });

    return '  ? Telegram WebHook Set: Successfull!';
});

module.exports = constructor;

-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>var interface = require('./../interface');
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^^^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
              ^
              source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
               ^
               source.ts meta.var.expr.ts keyword.operator.assignment.ts
                ^
                source.ts meta.var.expr.ts
                 ^^^^^^^
                 source.ts meta.var.expr.ts support.function.ts
                        ^
                        source.ts meta.var.expr.ts meta.brace.round.ts
                         ^
                         source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                          ^^^^^^^^^^^^^^
                          source.ts meta.var.expr.ts string.quoted.single.ts
                                        ^
                                        source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                         ^
                                         source.ts meta.var.expr.ts meta.brace.round.ts
                                          ^
                                          source.ts punctuation.terminator.statement.ts
                                           ^^
                                           source.ts
>var ctrl = require('./controllers');
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
         ^
         source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
          ^
          source.ts meta.var.expr.ts keyword.operator.assignment.ts
           ^
           source.ts meta.var.expr.ts
            ^^^^^^^
            source.ts meta.var.expr.ts support.function.ts
                   ^
                   source.ts meta.var.expr.ts meta.brace.round.ts
                    ^
                    source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                     ^^^^^^^^^^^^^
                     source.ts meta.var.expr.ts string.quoted.single.ts
                                  ^
                                  source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                   ^
                                   source.ts meta.var.expr.ts meta.brace.round.ts
                                    ^
                                    source.ts punctuation.terminator.statement.ts
                                     ^^
                                     source.ts
>var utils = require('./../utils');
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
          ^
          source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
           ^
           source.ts meta.var.expr.ts keyword.operator.assignment.ts
            ^
            source.ts meta.var.expr.ts
             ^^^^^^^
             source.ts meta.var.expr.ts support.function.ts
                    ^
                    source.ts meta.var.expr.ts meta.brace.round.ts
                     ^
                     source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                      ^^^^^^^^^^
                      source.ts meta.var.expr.ts string.quoted.single.ts
                                ^
                                source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                 ^
                                 source.ts meta.var.expr.ts meta.brace.round.ts
                                  ^
                                  source.ts punctuation.terminator.statement.ts
                                   ^^
                                   source.ts
>var Promise = require('bluebird');
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
            ^
            source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
             ^
             source.ts meta.var.expr.ts keyword.operator.assignment.ts
              ^
              source.ts meta.var.expr.ts
               ^^^^^^^
               source.ts meta.var.expr.ts support.function.ts
                      ^
                      source.ts meta.var.expr.ts meta.brace.round.ts
                       ^
                       source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                        ^^^^^^^^
                        source.ts meta.var.expr.ts string.quoted.single.ts
                                ^
                                source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                 ^
                                 source.ts meta.var.expr.ts meta.brace.round.ts
                                  ^
                                  source.ts punctuation.terminator.statement.ts
                                   ^^
                                   source.ts
>var deligate = require('./core');
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
             ^
             source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
              ^
              source.ts meta.var.expr.ts keyword.operator.assignment.ts
               ^
               source.ts meta.var.expr.ts
                ^^^^^^^
                source.ts meta.var.expr.ts support.function.ts
                       ^
                       source.ts meta.var.expr.ts meta.brace.round.ts
                        ^
                        source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                         ^^^^^^
                         source.ts meta.var.expr.ts string.quoted.single.ts
                               ^
                               source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                ^
                                source.ts meta.var.expr.ts meta.brace.round.ts
                                 ^
                                 source.ts punctuation.terminator.statement.ts
                                  ^^
                                  source.ts
>var log = require('./../log');
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
        ^
        source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
         ^
         source.ts meta.var.expr.ts keyword.operator.assignment.ts
          ^
          source.ts meta.var.expr.ts
           ^^^^^^^
           source.ts meta.var.expr.ts support.function.ts
                  ^
                  source.ts meta.var.expr.ts meta.brace.round.ts
                   ^
                   source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                    ^^^^^^^^
                    source.ts meta.var.expr.ts string.quoted.single.ts
                            ^
                            source.ts meta.var.expr.ts string.quoted.single.ts punctuation.definition.string.end.ts
                             ^
                             source.ts meta.var.expr.ts meta.brace.round.ts
                              ^
                              source.ts punctuation.terminator.statement.ts
                               ^^
                               source.ts
>
 ^^
 source.ts
>var constructor = deligate.then(function(bot)
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^^^^^^^^^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
                ^
                source.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                 ^
                 source.ts meta.var.expr.ts keyword.operator.assignment.ts
                  ^
                  source.ts meta.var.expr.ts
                   ^^^^^^^^
                   source.ts meta.var.expr.ts variable.other.object.ts
                           ^
                           source.ts meta.var.expr.ts punctuation.accessor.ts
                            ^^^^
                            source.ts meta.var.expr.ts entity.name.function.ts
                                ^
                                source.ts meta.var.expr.ts meta.brace.round.ts
                                 ^^^^^^^^
                                 source.ts meta.var.expr.ts meta.function.expression.ts storage.type.function.ts
                                         ^
                                         source.ts meta.var.expr.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                                          ^^^
                                          source.ts meta.var.expr.ts meta.function.expression.ts meta.parameters.ts variable.parameter.ts
                                             ^
                                             source.ts meta.var.expr.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                              ^^
                                              source.ts meta.var.expr.ts meta.function.expression.ts
>{
 ^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
  ^^
  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
>    bot.sendMessage(110224344, 'here is the index');
 ^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
     ^^^
     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts variable.other.object.ts
        ^
        source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
         ^^^^^^^^^^^
         source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts entity.name.function.ts
                    ^
                    source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                     ^^^^^^^^^
                     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts constant.numeric.decimal.ts
                              ^
                              source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts punctuation.separator.comma.ts
                               ^
                               source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
                                ^
                                source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts string.quoted.single.ts punctuation.definition.string.begin.ts
                                 ^^^^^^^^^^^^^^^^^
                                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts string.quoted.single.ts
                                                  ^
                                                  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                                   ^
                                                   source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                                                    ^
                                                    source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts punctuation.terminator.statement.ts
                                                     ^^
                                                     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
>    bot.on('message', function(message)
 ^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
     ^^^
     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts variable.other.object.ts
        ^
        source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
         ^^
         source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts entity.name.function.ts
           ^
           source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
            ^
            source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts string.quoted.single.ts punctuation.definition.string.begin.ts
             ^^^^^^^
             source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts string.quoted.single.ts
                    ^
                    source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts string.quoted.single.ts punctuation.definition.string.end.ts
                     ^
                     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts punctuation.separator.comma.ts
                      ^
                      source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
                       ^^^^^^^^
                       source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts storage.type.function.ts
                               ^
                               source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                                ^^^^^^^
                                source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.parameters.ts variable.parameter.ts
                                       ^
                                       source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                        ^^
                                        source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts
>    {
 ^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts
     ^
     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
      ^^
      source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts
>        if(utils.telegram.is_command(message.text))
 ^^^^^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts
         ^^
         source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts keyword.control.conditional.ts
           ^
           source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
            ^^^^^
            source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.object.ts
                 ^
                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                  ^^^^^^^^
                  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.object.property.ts
                          ^
                          source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                           ^^^^^^^^^^
                           source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts entity.name.function.ts
                                     ^
                                     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                                      ^^^^^^^
                                      source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.object.ts
                                             ^
                                             source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                                              ^^^^
                                              source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts support.variable.property.dom.ts
                                                  ^
                                                  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                                                   ^
                                                   source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                                                    ^^
                                                    source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts
>        {
 ^^^^^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts
         ^
         source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
          ^^
          source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts
>            ctrl.commands(message).catch(function(error_log)
 ^^^^^^^^^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts
             ^^^^
             source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts variable.other.object.ts
                 ^
                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts punctuation.accessor.ts
                  ^^^^^^^^
                  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts entity.name.function.ts
                          ^
                          source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.brace.round.ts
                           ^^^^^^^
                           source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts variable.other.readwrite.ts
                                  ^
                                  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.brace.round.ts
                                   ^
                                   source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts punctuation.accessor.ts
                                    ^^^^^
                                    source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts entity.name.function.ts
                                         ^
                                         source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.brace.round.ts
                                          ^^^^^^^^
                                          source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts storage.type.function.ts
                                                  ^
                                                  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                                                   ^^^^^^^^^
                                                   source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.parameters.ts variable.parameter.ts
                                                            ^
                                                            source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                                             ^^
                                                             source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts
>            {
 ^^^^^^^^^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts
             ^
             source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
              ^^
              source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts
>                bot.sendMessage(message.chat.id, interface.text.errors.redirect);
 ^^^^^^^^^^^^^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts
                 ^^^
                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.object.ts
                    ^
                    source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                     ^^^^^^^^^^^
                     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts entity.name.function.ts
                                ^
                                source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                                 ^^^^^^^
                                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.object.ts
                                        ^
                                        source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                                         ^^^^
                                         source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.object.property.ts
                                             ^
                                             source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                                              ^^
                                              source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts support.variable.property.dom.ts
                                                ^
                                                source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.separator.comma.ts
                                                 ^
                                                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts
                                                  ^^^^^^^^^
                                                  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.object.ts
                                                           ^
                                                           source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                                                            ^^^^
                                                            source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts support.variable.property.dom.ts
                                                                ^
                                                                source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                                                                 ^^^^^^
                                                                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.object.property.ts
                                                                       ^
                                                                       source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                                                                        ^^^^^^^^
                                                                        source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.property.ts
                                                                                ^
                                                                                source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                                                                                 ^
                                                                                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.terminator.statement.ts
                                                                                  ^^
                                                                                  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts
>                log.uncaughtException(error_log);
 ^^^^^^^^^^^^^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts
                 ^^^
                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.object.ts
                    ^
                    source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.accessor.ts
                     ^^^^^^^^^^^^^^^^^
                     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts entity.name.function.ts
                                      ^
                                      source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                                       ^^^^^^^^^
                                       source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts variable.other.readwrite.ts
                                                ^
                                                source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
                                                 ^
                                                 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.terminator.statement.ts
                                                  ^^
                                                  source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts
>            });
 ^^^^^^^^^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts
             ^
             source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
              ^
              source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts meta.brace.round.ts
               ^
               source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts punctuation.terminator.statement.ts
                ^^
                source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts
>        }
 ^^^^^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts
         ^
         source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts meta.block.ts punctuation.definition.block.ts
          ^^
          source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts
>    });
 ^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts
     ^
     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
      ^
      source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts meta.brace.round.ts
       ^
       source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts punctuation.terminator.statement.ts
        ^^
        source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
>
 ^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
>    return '  ? Telegram WebHook Set: Successfull!';
 ^^^^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
     ^^^^^^
     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts keyword.control.flow.ts
           ^
           source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
            ^
            source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts string.quoted.single.ts punctuation.definition.string.begin.ts
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts string.quoted.single.ts
                                                   ^
                                                   source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts string.quoted.single.ts punctuation.definition.string.end.ts
                                                    ^
                                                    source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts punctuation.terminator.statement.ts
                                                     ^^
                                                     source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts
>});
 ^
 source.ts meta.var.expr.ts meta.function.expression.ts meta.block.ts punctuation.definition.block.ts
  ^
  source.ts meta.var.expr.ts meta.brace.round.ts
   ^
   source.ts punctuation.terminator.statement.ts
    ^^
    source.ts
>
 ^^
 source.ts
>module.exports = constructor;
 ^^^^^^
 source.ts support.type.object.module.ts
       ^
       source.ts punctuation.accessor.ts
        ^^^^^^^
        source.ts support.type.object.module.ts
               ^
               source.ts
                ^
                source.ts keyword.operator.assignment.ts
                 ^
                 source.ts
                  ^^^^^^^^^^^
                  source.ts variable.other.readwrite.ts
                             ^
                             source.ts punctuation.terminator.statement.ts
                              ^^
                              source.ts
>
 ^
 source.ts