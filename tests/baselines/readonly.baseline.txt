original file
-----------------------------------
interface X {
    readonly a: number;
    readonly b?: number;
}

class C {
    readonly a: number;
    readonly b = 1;
}

var p: { readonly a: number, b: number }
let xx: { readonly [x: string]: string };
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>interface X {
 ^^^^^^^^^
 source.ts meta.interface.ts storage.type.interface.ts
          ^
          source.ts meta.interface.ts
           ^
           source.ts meta.interface.ts entity.name.type.interface.ts
            ^
            source.ts meta.interface.ts
             ^
             source.ts meta.interface.ts punctuation.definition.block.ts
>    readonly a: number;
 ^^^^
 source.ts meta.interface.ts
     ^^^^^^^^
     source.ts meta.interface.ts meta.field.declaration.ts storage.modifier.ts
             ^
             source.ts meta.interface.ts meta.field.declaration.ts
              ^
              source.ts meta.interface.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
               ^
               source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                ^
                source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts
                 ^^^^^^
                 source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts
                       ^
                       source.ts meta.interface.ts punctuation.terminator.statement.ts
>    readonly b?: number;
 ^^^^
 source.ts meta.interface.ts
     ^^^^^^^^
     source.ts meta.interface.ts meta.field.declaration.ts storage.modifier.ts
             ^
             source.ts meta.interface.ts meta.field.declaration.ts
              ^
              source.ts meta.interface.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
               ^
               source.ts meta.interface.ts meta.field.declaration.ts keyword.operator.optional.ts
                ^
                source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                 ^
                 source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts
                  ^^^^^^
                  source.ts meta.interface.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts
                        ^
                        source.ts meta.interface.ts punctuation.terminator.statement.ts
>}
 ^
 source.ts meta.interface.ts punctuation.definition.block.ts
>
 ^
 source.ts
>class C {
 ^^^^^
 source.ts meta.class.ts storage.type.class.ts
      ^
      source.ts meta.class.ts
       ^
       source.ts meta.class.ts entity.name.type.class.ts
        ^
        source.ts meta.class.ts
         ^
         source.ts meta.class.ts punctuation.definition.block.ts
>    readonly a: number;
 ^^^^
 source.ts meta.class.ts
     ^^^^^^^^
     source.ts meta.class.ts meta.field.declaration.ts storage.modifier.ts
             ^
             source.ts meta.class.ts meta.field.declaration.ts
              ^
              source.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
               ^
               source.ts meta.class.ts meta.field.declaration.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                ^
                source.ts meta.class.ts meta.field.declaration.ts meta.type.annotation.ts
                 ^^^^^^
                 source.ts meta.class.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts
                       ^
                       source.ts meta.class.ts punctuation.terminator.statement.ts
>    readonly b = 1;
 ^^^^
 source.ts meta.class.ts
     ^^^^^^^^
     source.ts meta.class.ts meta.field.declaration.ts storage.modifier.ts
             ^
             source.ts meta.class.ts meta.field.declaration.ts
              ^
              source.ts meta.class.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
               ^
               source.ts meta.class.ts meta.field.declaration.ts
                ^
                source.ts meta.class.ts meta.field.declaration.ts keyword.operator.assignment.ts
                 ^
                 source.ts meta.class.ts meta.field.declaration.ts
                  ^
                  source.ts meta.class.ts meta.field.declaration.ts constant.numeric.decimal.ts
                   ^
                   source.ts meta.class.ts punctuation.terminator.statement.ts
>}
 ^
 source.ts meta.class.ts punctuation.definition.block.ts
>
 ^
 source.ts
>var p: { readonly a: number, b: number }
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
      ^
      source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
       ^
       source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts
        ^
        source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts punctuation.definition.block.ts
         ^
         source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts
          ^^^^^^^^
          source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts storage.modifier.ts
                  ^
                  source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts
                   ^
                   source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                    ^
                    source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                     ^
                     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts
                      ^^^^^^
                      source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts
                            ^
                            source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts punctuation.separator.comma.ts
                             ^
                             source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts
                              ^
                              source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts meta.definition.property.ts variable.object.property.ts
                               ^
                               source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                                ^
                                source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts
                                 ^^^^^^
                                 source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts support.type.primitive.ts
                                       ^
                                       source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.field.declaration.ts meta.type.annotation.ts
                                        ^
                                        source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts punctuation.definition.block.ts
>let xx: { readonly [x: string]: string };
 ^^^
 source.ts meta.var.expr.ts storage.type.ts
    ^
    source.ts meta.var.expr.ts
     ^^
     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.definition.variable.ts variable.other.readwrite.ts
       ^
       source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
        ^
        source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts
         ^
         source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts punctuation.definition.block.ts
          ^
          source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts
           ^^^^^^^^
           source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.indexer.declaration.ts storage.modifier.ts
                   ^
                   source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.indexer.declaration.ts
                    ^
                    source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.indexer.declaration.ts meta.brace.square.ts
                     ^
                     source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.indexer.declaration.ts variable.parameter.ts
                      ^
                      source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.indexer.declaration.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                       ^
                       source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.indexer.declaration.ts meta.type.annotation.ts
                        ^^^^^^
                        source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.indexer.declaration.ts meta.type.annotation.ts support.type.primitive.ts
                              ^
                              source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.indexer.declaration.ts meta.brace.square.ts
                               ^
                               source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                                ^
                                source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.type.annotation.ts
                                 ^^^^^^
                                 source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.type.annotation.ts support.type.primitive.ts
                                       ^
                                       source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts meta.type.annotation.ts
                                        ^
                                        source.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.type.annotation.ts meta.object.type.ts punctuation.definition.block.ts
                                         ^
                                         source.ts punctuation.terminator.statement.ts