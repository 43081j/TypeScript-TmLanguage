original file
-----------------------------------
class Thing {
    constructor(public content: string){
        var prop = Q.defer<boolean>();
        this.store = new Data();
        gaze(path.join(this.content, "**/*.json"), (err, watch) => {
            process.stuout.write(`Watching for changes in:`);
        })
    };
}

class Thing<T, U> {
    constructor(public content: string){
        var prop = Q.defer<boolean>();
        this.store = new Data();
        gaze(path.join(this.content, "**/*.json"), (err, watch) => {
            process.stuout.write(`Watching for changes in:`);
        })
    };
}

-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>class Thing {
 ^^^^^
 source.ts meta.class.ts storage.type.class.ts
      ^
      source.ts meta.class.ts
       ^^^^^
       source.ts meta.class.ts entity.name.class.ts
            ^
            source.ts meta.class.ts
             ^
             source.ts meta.class.ts punctuation.definition.block.ts
>    constructor(public content: string){
 ^^^^
 source.ts meta.class.ts
     ^^^^^^^^^^^
     source.ts meta.class.ts meta.method.declaration.ts storage.type.ts
                ^
                source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                 ^^^^^^
                 source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts storage.modifier.ts
                       ^
                       source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts
                        ^^^^^^^
                        source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts variable.parameter.ts
                               ^
                               source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                                ^
                                source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts meta.type.annotation.ts
                                 ^^^^^^
                                 source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts meta.type.annotation.ts support.type.primitive.ts
                                       ^
                                       source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                        ^
                                        source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.definition.block.ts
>        var prop = Q.defer<boolean>();
 ^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
         ^^^
         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts storage.type.ts
            ^
            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts
             ^^^^
             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.other.readwrite.ts
                 ^
                 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                  ^
                  source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.assignment.ts
                   ^^
                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                     ^
                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts punctuation.accessor.ts
                      ^^^^^
                      source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts support.variable.property.dom.ts
                           ^
                           source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.relational.ts
                            ^^^^^^^
                            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                                   ^
                                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.relational.ts
                                    ^
                                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.brace.round.ts
                                     ^
                                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.terminator.statement.ts
>        this.store = new Data();
 ^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
         ^^^^
         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts variable.language.this.ts
             ^
             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.accessor.ts
              ^^^^^^
              source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
                    ^
                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts keyword.operator.assignment.ts
                     ^
                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
                      ^^^
                      source.ts meta.class.ts meta.method.declaration.ts meta.block.ts new.expr.ts keyword.operator.new.ts
                         ^
                         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts new.expr.ts
                          ^^^^
                          source.ts meta.class.ts meta.method.declaration.ts meta.block.ts new.expr.ts entity.name.type.ts
                              ^
                              source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
                               ^
                               source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
                                ^
                                source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.terminator.statement.ts
>        gaze(path.join(this.content, "**/*.json"), (err, watch) => {
 ^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
         ^^^^
         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts variable.function.ts
             ^
             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
              ^^^^
              source.ts meta.class.ts meta.method.declaration.ts meta.block.ts support.module.node.ts
                  ^
                  source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.accessor.ts
                   ^^^^
                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts support.function.ts
                       ^
                       source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
                        ^^^^
                        source.ts meta.class.ts meta.method.declaration.ts meta.block.ts variable.language.this.ts
                            ^
                            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.accessor.ts
                             ^^^^^^^
                             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts support.variable.property.dom.ts
                                    ^
                                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.separator.comma.ts
                                     ^
                                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
                                      ^
                                      source.ts meta.class.ts meta.method.declaration.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.begin.ts
                                       ^^^^^^^^^
                                       source.ts meta.class.ts meta.method.declaration.ts meta.block.ts string.quoted.double.ts
                                                ^
                                                source.ts meta.class.ts meta.method.declaration.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.end.ts
                                                 ^
                                                 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
                                                  ^
                                                  source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.separator.comma.ts
                                                   ^
                                                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts
                                                    ^
                                                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                                                     ^^^
                                                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts variable.parameter.ts
                                                        ^
                                                        source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts punctuation.separator.parameter.ts
                                                         ^
                                                         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts
                                                          ^^^^^
                                                          source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts variable.parameter.ts
                                                               ^
                                                               source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                                                ^
                                                                source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts
                                                                 ^^
                                                                 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts storage.type.function.arrow.ts
                                                                   ^
                                                                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts
                                                                    ^
                                                                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>            process.stuout.write(`Watching for changes in:`);
 ^^^^^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts
             ^^^^^^^
             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts support.variable.object.process.ts
                    ^
                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.accessor.ts
                     ^^^^^^
                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts
                           ^
                           source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.accessor.ts
                            ^^^^^
                            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts support.function.dom.ts
                                 ^
                                 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
                                  ^
                                  source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts string.template.ts punctuation.definition.string.template.begin.ts
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts string.template.ts
                                                           ^
                                                           source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts string.template.ts punctuation.definition.string.template.end.ts
                                                            ^
                                                            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
                                                             ^
                                                             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.terminator.statement.ts
>        })
 ^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts
         ^
         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
          ^
          source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
>    };
 ^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
     ^
     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.definition.block.ts
      ^
      source.ts meta.class.ts punctuation.terminator.statement.ts
>}
 ^
 source.ts meta.class.ts punctuation.definition.block.ts
>
 ^
 source.ts
>class Thing<T, U> {
 ^^^^^
 source.ts meta.class.ts storage.type.class.ts
      ^
      source.ts meta.class.ts
       ^^^^^
       source.ts meta.class.ts entity.name.class.ts
            ^
            source.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
             ^
             source.ts meta.class.ts meta.type.parameters.ts entity.name.type.ts
              ^
              source.ts meta.class.ts meta.type.parameters.ts punctuation.separator.comma.ts
               ^
               source.ts meta.class.ts meta.type.parameters.ts
                ^
                source.ts meta.class.ts meta.type.parameters.ts entity.name.type.ts
                 ^
                 source.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                  ^
                  source.ts meta.class.ts
                   ^
                   source.ts meta.class.ts punctuation.definition.block.ts
>    constructor(public content: string){
 ^^^^
 source.ts meta.class.ts
     ^^^^^^^^^^^
     source.ts meta.class.ts meta.method.declaration.ts storage.type.ts
                ^
                source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                 ^^^^^^
                 source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts storage.modifier.ts
                       ^
                       source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts
                        ^^^^^^^
                        source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts variable.parameter.ts
                               ^
                               source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts meta.type.annotation.ts keyword.operator.type.annotation.ts
                                ^
                                source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts meta.type.annotation.ts
                                 ^^^^^^
                                 source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts meta.type.annotation.ts support.type.primitive.ts
                                       ^
                                       source.ts meta.class.ts meta.method.declaration.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                        ^
                                        source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.definition.block.ts
>        var prop = Q.defer<boolean>();
 ^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
         ^^^
         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts storage.type.ts
            ^
            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts
             ^^^^
             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.other.readwrite.ts
                 ^
                 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                  ^
                  source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.assignment.ts
                   ^^
                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                     ^
                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts punctuation.accessor.ts
                      ^^^^^
                      source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts support.variable.property.dom.ts
                           ^
                           source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.relational.ts
                            ^^^^^^^
                            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
                                   ^
                                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.relational.ts
                                    ^
                                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.brace.round.ts
                                     ^
                                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts meta.brace.round.ts
                                      ^
                                      source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.terminator.statement.ts
>        this.store = new Data();
 ^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
         ^^^^
         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts variable.language.this.ts
             ^
             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.accessor.ts
              ^^^^^^
              source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
                    ^
                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts keyword.operator.assignment.ts
                     ^
                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
                      ^^^
                      source.ts meta.class.ts meta.method.declaration.ts meta.block.ts new.expr.ts keyword.operator.new.ts
                         ^
                         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts new.expr.ts
                          ^^^^
                          source.ts meta.class.ts meta.method.declaration.ts meta.block.ts new.expr.ts entity.name.type.ts
                              ^
                              source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
                               ^
                               source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
                                ^
                                source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.terminator.statement.ts
>        gaze(path.join(this.content, "**/*.json"), (err, watch) => {
 ^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
         ^^^^
         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts variable.function.ts
             ^
             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
              ^^^^
              source.ts meta.class.ts meta.method.declaration.ts meta.block.ts support.module.node.ts
                  ^
                  source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.accessor.ts
                   ^^^^
                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts support.function.ts
                       ^
                       source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
                        ^^^^
                        source.ts meta.class.ts meta.method.declaration.ts meta.block.ts variable.language.this.ts
                            ^
                            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.accessor.ts
                             ^^^^^^^
                             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts support.variable.property.dom.ts
                                    ^
                                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.separator.comma.ts
                                     ^
                                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
                                      ^
                                      source.ts meta.class.ts meta.method.declaration.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.begin.ts
                                       ^^^^^^^^^
                                       source.ts meta.class.ts meta.method.declaration.ts meta.block.ts string.quoted.double.ts
                                                ^
                                                source.ts meta.class.ts meta.method.declaration.ts meta.block.ts string.quoted.double.ts punctuation.definition.string.end.ts
                                                 ^
                                                 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
                                                  ^
                                                  source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.separator.comma.ts
                                                   ^
                                                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts
                                                    ^
                                                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.begin.ts
                                                     ^^^
                                                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts variable.parameter.ts
                                                        ^
                                                        source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts punctuation.separator.parameter.ts
                                                         ^
                                                         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts
                                                          ^^^^^
                                                          source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts variable.parameter.ts
                                                               ^
                                                               source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.parameters.ts punctuation.definition.parameters.end.ts
                                                                ^
                                                                source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts
                                                                 ^^
                                                                 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts storage.type.function.arrow.ts
                                                                   ^
                                                                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts
                                                                    ^
                                                                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
>            process.stuout.write(`Watching for changes in:`);
 ^^^^^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts
             ^^^^^^^
             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts support.variable.object.process.ts
                    ^
                    source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.accessor.ts
                     ^^^^^^
                     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts
                           ^
                           source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.accessor.ts
                            ^^^^^
                            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts support.function.dom.ts
                                 ^
                                 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
                                  ^
                                  source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts string.template.ts punctuation.definition.string.template.begin.ts
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                                   source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts string.template.ts
                                                           ^
                                                           source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts string.template.ts punctuation.definition.string.template.end.ts
                                                            ^
                                                            source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts meta.brace.round.ts
                                                             ^
                                                             source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.terminator.statement.ts
>        })
 ^^^^^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts
         ^
         source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.arrow.ts meta.block.ts punctuation.definition.block.ts
          ^
          source.ts meta.class.ts meta.method.declaration.ts meta.block.ts meta.brace.round.ts
>    };
 ^^^^
 source.ts meta.class.ts meta.method.declaration.ts meta.block.ts
     ^
     source.ts meta.class.ts meta.method.declaration.ts meta.block.ts punctuation.definition.block.ts
      ^
      source.ts meta.class.ts punctuation.terminator.statement.ts
>}
 ^
 source.ts meta.class.ts punctuation.definition.block.ts
>
 ^
 source.ts


Grammar: TypeScriptReact.tmLanguage
-----------------------------------
>class Thing {
>    constructor(public content: string){
>        var prop = Q.defer<boolean>();
 ^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx
         ^^^
         source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx storage.type.tsx
            ^
            source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx
             ^^^^
             source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx variable.other.readwrite.tsx
                 ^
                 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx
                  ^
                  source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx keyword.operator.assignment.tsx
                   ^^
                   source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx
                     ^
                     source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx punctuation.accessor.tsx
                      ^^^^^
                      source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx support.variable.property.dom.tsx
                           ^
                           source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx punctuation.definition.tag.begin.tsx
                            ^^^^^^^
                            source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx entity.name.tag.tsx
                                   ^
                                   source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx punctuation.definition.tag.end.tsx
                                    ^^^^
                                    source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx
>        this.store = new Data();
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx
>        gaze(path.join(this.content, "**/*.json"), (err, watch) => {
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx
                                                                    ^
                                                                    source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx punctuation.definition.brace.curly.start.tsx
>            process.stuout.write(`Watching for changes in:`);
 ^^^^^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx
             ^^^^^^^
             source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx support.variable.object.process.tsx
                    ^
                    source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx punctuation.accessor.tsx
                     ^^^^^^
                     source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx
                           ^
                           source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx punctuation.accessor.tsx
                            ^^^^^
                            source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx support.function.dom.tsx
                                 ^
                                 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.brace.round.tsx
                                  ^
                                  source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx string.template.tsx punctuation.definition.string.template.begin.tsx
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                                   source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx string.template.tsx
                                                           ^
                                                           source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx string.template.tsx punctuation.definition.string.template.end.tsx
                                                            ^
                                                            source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.brace.round.tsx
                                                             ^^
                                                             source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx
>        })
 ^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx
         ^
         source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx punctuation.definition.brace.curly.end.tsx
          ^^
          source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx
>    };
 ^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx
>}
 ^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx
>
 ^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx
>class Thing<T, U> {
 ^^^^^^^^^^^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx
                   ^
                   source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx punctuation.definition.brace.curly.start.tsx
>    constructor(public content: string){
 ^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx
     ^^^^^^^^^^^
     source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx variable.function.tsx
                ^
                source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.brace.round.tsx
                 ^^^^^^^^^^^^^^^^^^^^^^
                 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx
                                       ^
                                       source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.brace.round.tsx
                                        ^
                                        source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx punctuation.definition.block.tsx
>        var prop = Q.defer<boolean>();
 ^^^^^^^^^^^^^^^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx
                       ^^^^
                       source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx entity.name.function.tsx
                           ^
                           source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.type.parameters.tsx punctuation.definition.typeparameters.begin.tsx
                            ^^^^^^^
                            source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.type.parameters.tsx support.type.primitive.tsx
                                   ^
                                   source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.type.parameters.tsx punctuation.definition.typeparameters.end.tsx
                                    ^
                                    source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx punctuation.definition.parameters.begin.tsx
                                     ^
                                     source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx punctuation.definition.parameters.end.tsx
                                      ^^
                                      source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx
>        this.store = new Data();
 ^^^^^^^^^^^^^^^^^^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx
                          ^^^^
                          source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx entity.name.function.tsx
                              ^
                              source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx punctuation.definition.parameters.begin.tsx
                               ^
                               source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx punctuation.definition.parameters.end.tsx
                                ^^
                                source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx
>        gaze(path.join(this.content, "**/*.json"), (err, watch) => {
 ^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx
         ^^^^
         source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx entity.name.function.tsx
             ^
             source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx punctuation.definition.parameters.begin.tsx
              ^^^^
              source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx variable.parameter.tsx
                  ^
                  source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx
                   ^^^^
                   source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx variable.parameter.tsx
                       ^
                       source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx
                        ^^^^
                        source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx variable.parameter.tsx
                            ^
                            source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx
                             ^^^^^^^
                             source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx variable.parameter.tsx
                                    ^
                                    source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx punctuation.separator.parameter.tsx
                                     ^^^^
                                     source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx
                                         ^^
                                         source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx comment.block.tsx punctuation.definition.comment.tsx
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                           source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx comment.block.tsx
>            process.stuout.write(`Watching for changes in:`);
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx comment.block.tsx
>        })
 ^^^^^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx comment.block.tsx
>    };
 ^^^^^^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx comment.block.tsx
>}
 ^^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx comment.block.tsx
>
 ^
 source.tsx meta.class.tsx meta.method.declaration.tsx meta.block.tsx meta.var.expr.tsx meta.var-single-variable.expr.tsx meta.tag.without-attributes.tsx meta.jsx.children.tsx meta.brace.curly.tsx meta.object-literal.tsx meta.method.declaration.tsx meta.parameters.tsx comment.block.tsx