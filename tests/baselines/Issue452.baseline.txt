original file
-----------------------------------
class Test<A, B>{}
class Favorite extends Test<
  string | number,
  undefined
> {
  // class content  
}
-----------------------------------

Grammar: TypeScript.tmLanguage
-----------------------------------
>class Test<A, B>{}
 ^^^^^
 source.ts meta.class.ts storage.type.class.ts
      ^
      source.ts meta.class.ts
       ^^^^
       source.ts meta.class.ts entity.name.type.class.ts
           ^
           source.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
            ^
            source.ts meta.class.ts meta.type.parameters.ts entity.name.type.ts
             ^
             source.ts meta.class.ts meta.type.parameters.ts punctuation.separator.comma.ts
              ^
              source.ts meta.class.ts meta.type.parameters.ts
               ^
               source.ts meta.class.ts meta.type.parameters.ts entity.name.type.ts
                ^
                source.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
                 ^
                 source.ts meta.class.ts punctuation.definition.block.ts
                  ^
                  source.ts meta.class.ts punctuation.definition.block.ts
>class Favorite extends Test<
 ^^^^^
 source.ts meta.class.ts storage.type.class.ts
      ^
      source.ts meta.class.ts
       ^^^^^^^^
       source.ts meta.class.ts entity.name.type.class.ts
               ^
               source.ts meta.class.ts
                ^^^^^^^
                source.ts meta.class.ts storage.modifier.ts
                       ^
                       source.ts meta.class.ts
                        ^^^^
                        source.ts meta.class.ts entity.other.inherited-class.ts
                            ^
                            source.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts
>  string | number,
 ^^
 source.ts meta.class.ts meta.type.parameters.ts
   ^^^^^^
   source.ts meta.class.ts meta.type.parameters.ts support.type.primitive.ts
         ^
         source.ts meta.class.ts meta.type.parameters.ts
          ^
          source.ts meta.class.ts meta.type.parameters.ts keyword.operator.type.ts
           ^
           source.ts meta.class.ts meta.type.parameters.ts
            ^^^^^^
            source.ts meta.class.ts meta.type.parameters.ts support.type.primitive.ts
                  ^
                  source.ts meta.class.ts meta.type.parameters.ts punctuation.separator.comma.ts
>  undefined
 ^^
 source.ts meta.class.ts meta.type.parameters.ts
   ^^^^^^^^^
   source.ts meta.class.ts meta.type.parameters.ts support.type.builtin.ts
>> {
 ^
 source.ts meta.class.ts meta.type.parameters.ts punctuation.definition.typeparameters.end.ts
  ^
  source.ts meta.class.ts
   ^
   source.ts meta.class.ts punctuation.definition.block.ts
>  // class content  
 ^^
 source.ts meta.class.ts punctuation.whitespace.comment.leading.ts
   ^^
   source.ts meta.class.ts comment.line.double-slash.ts punctuation.definition.comment.ts
     ^^^^^^^^^^^^^^^^^
     source.ts meta.class.ts comment.line.double-slash.ts
>}
 ^
 source.ts meta.class.ts punctuation.definition.block.ts