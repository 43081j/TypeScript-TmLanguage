original file
-----------------------------------
class A1 {
	b() {
		let d;
		d.^^default = 1;
	}

	^^private ^^static c() {
	}
}

class A2 {
	b() {
		let d;
		d.^^case = 1
	}

	^^private ^^static c() {
	}
}

class A3 {
	b() {
		let d
		d.^^default = 1
		switch (d.^^default) {
			^^case 1:
			^^case 2:
			^^default:
				break;
		}
	}

	^^private ^^static c() {
	}
}

class A4 {
	b() {
		let d
		d.^^case = 1
		switch (d.^^default) {
			^^case 1:
			^^case 2:
			^^default:
				break;
		}
	}

	^^private ^^static c() {
	}
}
-----------------------------------

>class A1 {
 ^^^^^
 source.ts meta.declaration.object.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts
       ^^
       source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
         ^
         source.ts meta.declaration.object.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>	b() {
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
   ^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
    ^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
     ^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
      ^
      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>		let d;
 ^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts
   ^^^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts
       ^
       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.ts
        ^^
        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
>		d.default = 1;
 ^^^^^^^^^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
             ^
             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts keyword.operator.comparison.ts
              ^
              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
               ^
               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts constant.numeric.decimal.ts
                ^^
                source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
>	}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
>	private static c() {
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
  ^^^^^^^
  source.ts meta.declaration.object.ts meta.object.body.ts storage.modifier.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts
          ^^^^^^
          source.ts meta.declaration.object.ts meta.object.body.ts keyword.other.ts
                ^
                source.ts meta.declaration.object.ts meta.object.body.ts
                 ^
                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                   ^
                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                    ^
                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
                     ^
                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>	}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>
 ^
 source.ts
>class A2 {
 ^^^^^
 source.ts meta.declaration.object.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts
       ^^
       source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
         ^
         source.ts meta.declaration.object.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>	b() {
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
   ^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
    ^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
     ^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
      ^
      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>		let d;
 ^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts
   ^^^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts
       ^
       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.ts
        ^^
        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
>		d.case = 1
 ^^^^^^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts keyword.operator.comparison.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
            ^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts constant.numeric.decimal.ts
>	}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
>	private static c() {
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
  ^^^^^^^
  source.ts meta.declaration.object.ts meta.object.body.ts storage.modifier.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts
          ^^^^^^
          source.ts meta.declaration.object.ts meta.object.body.ts keyword.other.ts
                ^
                source.ts meta.declaration.object.ts meta.object.body.ts
                 ^
                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                   ^
                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                    ^
                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
                     ^
                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>	}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>
 ^
 source.ts
>class A3 {
 ^^^^^
 source.ts meta.declaration.object.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts
       ^^
       source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
         ^
         source.ts meta.declaration.object.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>	b() {
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
   ^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
    ^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
     ^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
      ^
      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>		let d
 ^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts
   ^^^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts
       ^
       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.ts
>		d.default = 1
 ^^^^^^^^^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
             ^
             source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.comparison.ts
              ^
              source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
               ^
               source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts constant.numeric.decimal.ts
>		switch (d.default) {
 ^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
   ^^^^^^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-expression.expr.ts keyword.control.ts
         ^^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-expression.expr.ts
           ^^^^^^^^^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-expression.expr.ts
                    ^
                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-expression.expr.ts
                     ^
                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts
                      ^
                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
>			case 1:
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
    ^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts keyword.control.ts
        ^
        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts constant.numeric.decimal.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
>			case 2:
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
    ^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts keyword.control.ts
        ^
        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts constant.numeric.decimal.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
>			default:
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
    ^^^^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts keyword.control.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
>				break;
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
     ^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts keyword.control.ts
          ^^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
>		}
 ^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
   ^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts
>	}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
>	private static c() {
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
  ^^^^^^^
  source.ts meta.declaration.object.ts meta.object.body.ts storage.modifier.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts
          ^^^^^^
          source.ts meta.declaration.object.ts meta.object.body.ts keyword.other.ts
                ^
                source.ts meta.declaration.object.ts meta.object.body.ts
                 ^
                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                   ^
                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                    ^
                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
                     ^
                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>	}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>
 ^
 source.ts
>class A4 {
 ^^^^^
 source.ts meta.declaration.object.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts
       ^^
       source.ts meta.declaration.object.ts meta.object.name.ts entity.name.class.ts
         ^
         source.ts meta.declaration.object.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts
>	b() {
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
   ^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
    ^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
     ^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
      ^
      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>		let d
 ^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts
   ^^^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts storage.type.ts
      ^
      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts
       ^
       source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts variable.ts
>		d.case = 1
 ^^^^^^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts keyword.operator.comparison.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts
            ^
            source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.var.expr.ts meta.var-single-variable.expr.ts constant.numeric.decimal.ts
>		switch (d.default) {
 ^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
   ^^^^^^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-expression.expr.ts keyword.control.ts
         ^^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-expression.expr.ts
           ^^^^^^^^^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-expression.expr.ts
                    ^
                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-expression.expr.ts
                     ^
                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts
                      ^
                      source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
>			case 1:
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
    ^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts keyword.control.ts
        ^
        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts constant.numeric.decimal.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
>			case 2:
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
    ^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts keyword.control.ts
        ^
        source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts constant.numeric.decimal.ts
          ^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
>			default:
 ^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
    ^^^^^^^
    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts keyword.control.ts
           ^
           source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts case-clause.expr.ts
>				break;
 ^^^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
     ^^^^^
     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts keyword.control.ts
          ^^
          source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
>		}
 ^^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts switch-block.expr.ts
   ^
   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts switch-statement.expr.ts
>	}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
>	private static c() {
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts
  ^^^^^^^
  source.ts meta.declaration.object.ts meta.object.body.ts storage.modifier.ts
         ^
         source.ts meta.declaration.object.ts meta.object.body.ts
          ^^^^^^
          source.ts meta.declaration.object.ts meta.object.body.ts keyword.other.ts
                ^
                source.ts meta.declaration.object.ts meta.object.body.ts
                 ^
                 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts entity.name.function.ts
                  ^
                  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                   ^
                   source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.function.type.parameter.ts meta.brace.round.ts
                    ^
                    source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts
                     ^
                     source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>	}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts
  ^
  source.ts meta.declaration.object.ts meta.object.body.ts meta.method.declaration.ts meta.decl.block.ts meta.brace.curly.ts
>}
 ^
 source.ts meta.declaration.object.ts meta.object.body.ts meta.brace.curly.ts